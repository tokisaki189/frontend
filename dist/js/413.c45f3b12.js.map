{"version":3,"file":"js/413.c45f3b12.js","mappings":"+PACOA,MAAM,a,GAQJA,MAAM,kB,UACTC,EAAAA,EAAAA,GAAyC,SAAlCC,IAAI,eAAc,YAAQ,K,oBASjCD,EAAAA,EAAAA,GAA4C,SAArCC,IAAI,iBAAgB,aAAS,K,aAU/BF,MAAM,c,8DA5BfC,EAAAA,EAAAA,GA+BM,MA/BNE,EA+BM,EA9BJF,EAAAA,EAAAA,GAAyB,SAAtB,WAAOG,EAAAA,EAAAA,IAAGC,EAAAC,OAAK,IAClBL,EAAAA,EAAAA,GAAgC,SAA7B,UAAMG,EAAAA,EAAAA,IAAGC,EAAAE,eAAa,IACzBN,EAAAA,EAAAA,GAA4B,SAAzB,QAAIG,EAAAA,EAAAA,IAAGC,EAAAG,aAAW,IACrBP,EAAAA,EAAAA,GAEI,SAFD,qBACeG,EAAAA,EAAAA,IAAGC,EAAAI,WAAWJ,EAAAK,gBAAiB,QAAIN,EAAAA,EAAAA,IAAGC,EAAAM,eAAa,IAErEV,EAAAA,EAAAA,GAAuE,SAApE,kBAAcG,EAAAA,EAAAA,IAAGC,EAAAI,WAAWJ,EAAAO,cAAe,QAAIR,EAAAA,EAAAA,IAAGC,EAAAQ,aAAW,IAChEZ,EAAAA,EAAAA,GAqBM,MArBNa,EAqBM,CApBJC,GAAyC,SACzCd,EAAAA,EAAAA,GAME,SALAe,KAAK,S,qCACIX,EAAAY,eAAcC,GACvBC,IAAI,IACHC,IAAKf,EAAAgB,WACNC,GAAG,e,iBAHMjB,EAAAY,mBAKXhB,EAAAA,EAAAA,GAAyC,SAAtC,kBAAcG,EAAAA,EAAAA,IAAGC,EAAAY,gBAAc,GAClCM,GAA4C,SAC5CtB,EAAAA,EAAAA,GAOE,SANAe,KAAK,S,qCACIX,EAAAmB,iBAAgBN,GACzBO,KAAK,GACLH,GAAG,gBACHH,IAAI,IACHC,IAAKf,EAAAqB,c,iBAJGrB,EAAAmB,qBAMXvB,EAAAA,EAAAA,GAA6C,SAA1C,oBAAgBG,EAAAA,EAAAA,IAAGC,EAAAmB,kBAAgB,IACtCvB,EAAAA,EAAAA,GAA4D,MAA5D0B,EAAwB,iBAAavB,EAAAA,EAAAA,IAAGC,EAAAuB,YAAa,IAAC,MAExD3B,EAAAA,EAAAA,GAAgD,UAAvC4B,QAAKC,EAAA,KAAAA,EAAA,GAAAZ,GAAEb,EAAA0B,UAAS,qBAE3B9B,EAAAA,EAAAA,GAAoB,UAAAG,EAAAA,EAAAA,IAAdC,EAAA2B,SAAO,O,2CAQf,GACEC,QACE,MAAMC,GAAQC,EAAAA,EAAAA,MACd,IAAIC,GAAQC,EAAAA,EAAAA,MACRC,GAAUC,EAAAA,EAAAA,MACVC,EAAWN,EAAMO,MAAMnB,GACvBoB,GAAeH,EAAAA,EAAAA,IAAI,IACnBtB,GAAiBsB,EAAAA,EAAAA,IAAI,GACrBf,GAAmBe,EAAAA,EAAAA,IAAI,GACvBI,GAAcJ,EAAAA,EAAAA,IAAI,IAClBK,GAAgBL,EAAAA,EAAAA,IAAI,IACpBjC,GAAQiC,EAAAA,EAAAA,IAAI,IACZhC,GAAgBgC,EAAAA,EAAAA,IAAI,IACpB/B,GAAc+B,EAAAA,EAAAA,IAAI,IAClB7B,GAAgB6B,EAAAA,EAAAA,IAAI,IACpB5B,GAAgB4B,EAAAA,EAAAA,IAAI,IACpB1B,GAAc0B,EAAAA,EAAAA,IAAI,IAClB3B,GAAc2B,EAAAA,EAAAA,IAAI,IAClBlB,GAAakB,EAAAA,EAAAA,IAAI,IACjBM,GAAkBN,EAAAA,EAAAA,IAAI,IACtBb,GAAea,EAAAA,EAAAA,IAAI,IACnBO,GAAoBP,EAAAA,EAAAA,IAAI,IACxBQ,GAASR,EAAAA,EAAAA,MACTP,GAAUO,EAAAA,EAAAA,IAAI,IAsClB,SAASR,IACP,IAAIiB,EAAO,eACU,GAAjBC,QAAQD,GACVE,EAAAA,EAAAA,KACQ,UAAYV,EAAU,CAC1BO,OAAQA,EAAOI,MACfC,gBAAiBnC,EAAekC,MAChCE,kBAAmB7B,EAAiB2B,MACpCG,UAAW1B,EAAWuB,QAEvBI,MAAMC,IACLxB,EAAQmB,MAAQK,EAASC,KAAKzB,QAC9B0B,QAAQC,IAAIH,EAASC,KAAK,IAE3BG,OAAOC,IACNH,QAAQC,IAAIE,EAAM,IAGtBH,QAAQC,IAAI,YAEhB,EAzDAG,EAAAA,EAAAA,KAAU,KACRf,EAAOI,MAAQf,EAAM2B,MAAMC,OAC3Bd,EAAAA,EAAAA,IACO,gBAAkBV,EAAU,CAAC,GACjCe,MAAMC,IACLd,EAAaS,MAAQK,EAASC,KAC9BnD,EAAM6C,MAAQT,EAAaS,MAAM,GAAGc,OACpC1D,EAAc4C,MAAQT,EAAaS,MAAM,GAAGe,eAC5CxD,EAAcyC,MAAQT,EAAaS,MAAM,GAAGgB,eAC5CvD,EAAYuC,MAAQT,EAAaS,MAAM,GAAGiB,aAC1CzD,EAAcwC,MAAQT,EAAaS,MAAM,GAAGkB,eAC5CxD,EAAYsC,MAAQT,EAAaS,MAAM,GAAGmB,aAC1C9D,EAAY2C,MAAQT,EAAaS,MAAM,GAAGoB,aAC1C5B,EAAYQ,MAAQT,EAAaS,MAAM,GAAGqB,kBAC1C5B,EAAcO,MAAQT,EAAaS,MAAM,GAAGsB,oBAC5CpD,EAAW8B,MAAQT,EAAaS,MAAM,GAAGuB,YACzChD,EAAayB,MAAQT,EAAaS,MAAM,GAAGwB,aAAa,IAEzDf,OAAOC,IACNH,QAAQG,MAAMA,EAAM,GACpB,IAuCN,IAAIjC,GAAagD,EAAAA,EAAAA,KAAS,KACxB,IAAIC,EACF5D,EAAekC,MAAQR,EAAYQ,MACnC3B,EAAiB2B,MAAQP,EAAcO,MACzC,OAAO2B,MAAMD,GAAU,EAAIA,CAAM,IAEnC,SAASpE,EAAWsE,GAClB,IAAIC,EAAU,IAAIC,KAAKF,GACvB,MAAMG,EAAOF,EAAQG,cACfC,EAAQJ,EAAQK,WAAa,EAC7BC,EAAMN,EAAQO,UACpB,MAAQ,GAAED,KAAOF,KAASF,GAC5B,CAIA,MAAO,CACL1C,WACAE,eACAd,aACAX,iBACAO,mBACAmB,cACAC,gBACAtC,QACAC,gBACAC,cACAE,gBACAC,gBACAE,cACAD,cACAS,aACAwB,kBACAnB,eACAoB,oBACAf,QACAtB,aACAuB,UACAM,UAEJ,G,QC7JF,MAAMkD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://flyticket/./src/views/OrderView.vue","webpack://flyticket/./src/views/OrderView.vue?77c4"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <p>Plane: {{ plane }}</p>\n    <p>From: {{ departureCity }}</p>\n    <p>To: {{ arrivalCity }}</p>\n    <p>\n      Departure Time: {{ formatDate(departureDate) }} at {{ departureTime }}\n    </p>\n    <p>Arrival Time: {{ formatDate(arrivalDate) }} at {{ arrivalTime }}</p>\n    <div class=\"priceContainer\">\n      <label for=\"normal-seat\"> Normal </label>\n      <input\n        type=\"number\"\n        v-model=\"normalQuantity\"\n        min=\"0\"\n        :max=\"normalSeat\"\n        id=\"normal-seat\"\n      />\n      <p>Normal Seat x {{ normalQuantity }}</p>\n      <label for=\"business-seat\"> Business</label>\n      <input\n        type=\"number\"\n        v-model=\"businessQuantity\"\n        name=\"\"\n        id=\"business=seat\"\n        min=\"0\"\n        :max=\"businessSeat\"\n      />\n      <p>Business Seat x {{ businessQuantity }}</p>\n      <div class=\"totalPrice\">Total Price: {{ totalPrice }}$</div>\n    </div>\n    <button @click=\"order()\">Order a Ticket</button>\n  </div>\n  <p>{{ message }}</p>\n</template>\n<script>\nimport { onMounted, computed /* onUpdated */ } from \"vue\";\nimport api from \"../api\";\nimport { useRoute } from \"vue-router\";\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let store = useStore();\n    let isLogin = ref();\n    let flightId = route.query.id;\n    let flightDetail = ref(\"\");\n    let normalQuantity = ref(0);\n    let businessQuantity = ref(0);\n    let normalPrice = ref(\"\");\n    let businessPrice = ref(\"\");\n    let plane = ref(\"\");\n    let departureCity = ref(\"\");\n    let arrivalCity = ref(\"\");\n    let departureDate = ref(\"\");\n    let departureTime = ref(\"\");\n    let arrivalTime = ref(\"\");\n    let arrivalDate = ref(\"\");\n    let normalSeat = ref(\"\");\n    let normalSeatPrice = ref(\"\");\n    let businessSeat = ref(\"\");\n    let businessSeatPrice = ref(\"\");\n    let userId = ref();\n    let message = ref(\"\");\n    onMounted(() => {\n      userId.value = store.state.userID;\n      api\n        .get(\"/orderflight/\" + flightId, {})\n        .then((response) => {\n          flightDetail.value = response.data;\n          plane.value = flightDetail.value[0].planes;\n          departureCity.value = flightDetail.value[0].departure_city;\n          departureDate.value = flightDetail.value[0].departure_date;\n          arrivalDate.value = flightDetail.value[0].arrival_date;\n          departureTime.value = flightDetail.value[0].departure_time;\n          arrivalTime.value = flightDetail.value[0].arrival_time;\n          arrivalCity.value = flightDetail.value[0].arrival_city;\n          normalPrice.value = flightDetail.value[0].normal_seat_price;\n          businessPrice.value = flightDetail.value[0].business_seat_price;\n          normalSeat.value = flightDetail.value[0].normal_seat;\n          businessSeat.value = flightDetail.value[0].business_seat;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      //   const token = Cookies.get(\"token\");\n      //   if (token) {\n      //     user.value = jwtDecode(token);\n      //     userId.value = user.value.id;\n      //     console.log(userId.value);\n      //     api\n      //       .get(\"/userprofile/\" + userId.value, {})\n      //       .then((response) => {\n      //         userInfo.value = response.data;\n      //         console.log(userInfo.value);\n      //       })\n      //       .catch((error) => {\n      //         console.log(error);\n      //       });\n      //   }\n    });\n    function order() {\n      let text = \"Are you sure\";\n      if (confirm(text) == true) {\n        api\n          .post(\"/order/\" + flightId, {\n            userId: userId.value,\n            normalSeatOrder: normalQuantity.value,\n            businessSeatOrder: businessQuantity.value,\n            totalPaid: totalPrice.value,\n          })\n          .then((response) => {\n            message.value = response.data.message;\n            console.log(response.data);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      } else {\n        console.log(\"cancelled\");\n      }\n    }\n    // console.log(normalPrice);\n    let totalPrice = computed(() => {\n      let result =\n        normalQuantity.value * normalPrice.value +\n        businessQuantity.value * businessPrice.value;\n      return isNaN(result) ? 0 : result;\n    });\n    function formatDate(date) {\n      let dateObj = new Date(date);\n      const year = dateObj.getFullYear();\n      const month = dateObj.getMonth() + 1;\n      const day = dateObj.getDate();\n      return `${day}-${month}-${year}`;\n    }\n    // onUpdated(() => {\n    //   console.log(totalPrice.value);\n    // });\n    return {\n      flightId,\n      flightDetail,\n      totalPrice,\n      normalQuantity,\n      businessQuantity,\n      normalPrice,\n      businessPrice,\n      plane,\n      departureCity,\n      arrivalCity,\n      departureDate,\n      departureTime,\n      arrivalTime,\n      arrivalDate,\n      normalSeat,\n      normalSeatPrice,\n      businessSeat,\n      businessSeatPrice,\n      order,\n      formatDate,\n      message,\n      isLogin,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  margin-top: 10rem;\n}\n.priceContainer {\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  margin: auto;\n  padding: auto;\n}\n.totalPrice {\n  color: red;\n  font-size: larger;\n}\ninput[type=\"number\"],\nselect {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\np {\n  font-size: large;\n  color: rgb(0, 165, 110);\n}\n</style>\n","import { render } from \"./OrderView.vue?vue&type=template&id=71956866&scoped=true\"\nimport script from \"./OrderView.vue?vue&type=script&lang=js\"\nexport * from \"./OrderView.vue?vue&type=script&lang=js\"\n\nimport \"./OrderView.vue?vue&type=style&index=0&id=71956866&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/prism/Documents/FlightApp/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-71956866\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","for","_hoisted_1","_toDisplayString","$setup","plane","departureCity","arrivalCity","formatDate","departureDate","departureTime","arrivalDate","arrivalTime","_hoisted_2","_hoisted_3","type","normalQuantity","$event","min","max","normalSeat","id","_hoisted_5","businessQuantity","name","businessSeat","_hoisted_7","totalPrice","onClick","_cache","order","message","setup","route","useRoute","store","useStore","isLogin","ref","flightId","query","flightDetail","normalPrice","businessPrice","normalSeatPrice","businessSeatPrice","userId","text","confirm","api","value","normalSeatOrder","businessSeatOrder","totalPaid","then","response","data","console","log","catch","error","onMounted","state","userID","planes","departure_city","departure_date","arrival_date","departure_time","arrival_time","arrival_city","normal_seat_price","business_seat_price","normal_seat","business_seat","computed","result","isNaN","date","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","__exports__","render"],"sourceRoot":""}