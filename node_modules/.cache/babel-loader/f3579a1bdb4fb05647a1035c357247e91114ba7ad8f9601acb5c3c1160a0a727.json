{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<table border=\\\"1\\\"><tr><th>ID</th><th>Username</th><th>First Name</th><th>Last Name</th><th>Email</th><th>Password</th></tr><tr><td>1</td><td>john123</td><td>John</td><td>Doe</td><td>john.doe@example.com</td><td>********</td></tr></table>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.users, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user\n    }, [_createElementVNode(\"p\", null, _toDisplayString(user.username), 1 /* TEXT */), _hoisted_2]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","users","user","key","_createElementVNode","_toDisplayString","username","_hoisted_2"],"sources":["/home/prism/Documents/flyticket/src/components/Admin/UserAccount.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-for=\"user in users\" :key=\"user\">\n      <p>{{ user.username }}</p>\n      <table border=\"1\">\n        <tr>\n          <th>ID</th>\n          <th>Username</th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Password</th>\n        </tr>\n        <tr>\n          <td>1</td>\n          <td>john123</td>\n          <td>John</td>\n          <td>Doe</td>\n          <td>john.doe@example.com</td>\n          <td>********</td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</template>\n<script>\nimport { onMounted, ref } from \"vue\";\nimport api from \"../../api\";\nexport default {\n  name: \"UserAccount\",\n  setup() {\n    let users = ref([]);\n    onMounted(() => {\n      api\n        .get(\"/alluser\")\n        .then((response) => {\n          users.value = response.data;\n          console.log(users.value);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    return { users };\n  },\n};\n</script>\n<style scoped></style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CAsBM,OAtBNC,UAsBM,I,kBArBJD,mBAAA,CAoBME,SAAA,QAAAC,WAAA,CApBcC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBN,mBAAA,CAoBM;MApBsBO,GAAG,EAAED;IAAI,IACnCE,mBAAA,CAA0B,WAAAC,gBAAA,CAApBH,IAAI,CAACI,QAAQ,kBACnBC,UAiBQ,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}