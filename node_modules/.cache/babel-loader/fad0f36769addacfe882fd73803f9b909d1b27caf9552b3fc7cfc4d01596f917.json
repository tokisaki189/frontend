{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p><p>adna</p>\", 18);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"p\", null, _toDisplayString($setup.flightId), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_hoisted_1","_createElementVNode","_toDisplayString","$setup","flightId"],"sources":["/home/prism/Documents/App/deploy/frontend/src/views/EditFlight.vue"],"sourcesContent":["<template>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>adna</p>\n  <p>{{ flightId }}</p>\n</template>\n<script>\n// import { ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { onMounted } from \"vue\";\nimport api from \"../api\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let flightId = route.query.id;\n    onMounted(() => {\n      console.log(flightId);\n      api\n        .get(\"/flight/\" + flightId)\n        .then((response) => {\n            console.log\n          //   flights.value = response.data;\n          //   console.log(flights.value);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n\n    return {\n      flightId,\n    };\n  },\n};\n</script>\n<style></style>\n"],"mappings":";;;6DACEA,UAAW,EAkBXC,mBAAA,CAAqB,WAAAC,gBAAA,CAAfC,MAAA,CAAAC,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}