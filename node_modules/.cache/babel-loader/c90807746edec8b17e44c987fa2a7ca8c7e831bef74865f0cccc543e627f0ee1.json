{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c8826044\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"crud\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"form-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<label for=\\\"plane\\\" data-v-c8826044>Plane</label><input type=\\\"text\\\" name=\\\"\\\" id=\\\"plane\\\" data-v-c8826044><label for=\\\"deparute\\\" data-v-c8826044>Departure City</label><input type=\\\"text\\\" name=\\\"\\\" id=\\\"departure\\\" data-v-c8826044><label for=\\\"arrival\\\" data-v-c8826044>Arrival City</label><input type=\\\"text\\\" name=\\\"\\\" id=\\\"arrival\\\" data-v-c8826044><label for=\\\"date\\\" data-v-c8826044> Date </label><input type=\\\"date\\\" name=\\\"\\\" id=\\\"date\\\" data-v-c8826044><label for=\\\"time\\\" data-v-c8826044> Time </label><input type=\\\"time\\\" name=\\\"\\\" id=\\\"time\\\" data-v-c8826044><label for=\\\"seats\\\" data-v-c8826044>Seats</label><input type=\\\"number\\\" name=\\\"\\\" id=\\\"seats\\\" data-v-c8826044>\", 12);\nconst _hoisted_16 = {\n  class: \"flight-list-container\"\n};\nconst _hoisted_17 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", _hoisted_3, [_hoisted_4, _createElementVNode(\"button\", {\n    class: \"add-flight\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.addflight && _ctx.addflight(...args))\n  }, \"Add Flight\")])]), _createElementVNode(\"div\", _hoisted_16, [_createCommentVNode(\" <table class=\\\"flight-list\\\">\\n      <tr>\\n        <th>Plane Name</th>\\n        <th>Departure City</th>\\n        <th>Arrival City</th>\\n        <th>Departure Date</th>\\n        <th>Arrival Date</th>\\n        <th>Departure Time</th>\\n        <th>Arrival Time</th>\\n        <th>Normal Seats</th>\\n        <th>Normal Seat Price</th>\\n        <th>Business Seats</th>\\n        <th>Business Seat Price</th>\\n      </tr>\\n      <tr v-for=\\\"flight in flights\\\" :key=\\\"flight\\\">\\n        <th>{{ flight.planes }}</th>\\n        <th>{{ flight.departure_city }}</th>\\n        <th>{{ flight.arrival_city }}</th>\\n        <th>{{ formatDate(flight.departure_date) }}</th>\\n        <th>{{ formatDate(flight.arrival_date) }}</th>\\n        <th>{{ flight.departure_time }}</th>\\n        <th>{{ flight.arrival_time }}</th>\\n        <th>{{ flight.normal_seat }}</th>\\n        <th>{{ flight.business_seat }}</th>\\n        <th>{{ flight.normal_seat_price }}</th>\\n        <th>{{ flight.business_seat_price }}</th>\\n      </tr>\\n    </table> \"), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.previousPage && _ctx.previousPage(...args))\n  }, \"Previous\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.nextPage && _ctx.nextPage(...args))\n  }, \"Next\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","_ctx","addflight","_hoisted_16","_createCommentVNode","_hoisted_17","previousPage","nextPage"],"sources":["/home/prism/Documents/flyticket/src/components/Admin/FlightCrud.vue"],"sourcesContent":["<template>\n  <div>crud</div>\n  <div class=\"container\">\n    <form class=\"form-container\">\n      <label for=\"plane\">Plane</label>\n      <input type=\"text\" name=\"\" id=\"plane\" />\n      <label for=\"deparute\">Departure City</label>\n      <input type=\"text\" name=\"\" id=\"departure\" />\n      <label for=\"arrival\">Arrival City</label>\n      <input type=\"text\" name=\"\" id=\"arrival\" />\n      <label for=\"date\"> Date </label>\n      <input type=\"date\" name=\"\" id=\"date\" />\n      <label for=\"time\"> Time </label>\n      <input type=\"time\" name=\"\" id=\"time\" />\n      <label for=\"seats\">Seats</label>\n      <input type=\"number\" name=\"\" id=\"seats\" />\n      <button class=\"add-flight\" @click=\"addflight\">Add Flight</button>\n    </form>\n  </div>\n  <div class=\"flight-list-container\">\n    <!-- <table class=\"flight-list\">\n      <tr>\n        <th>Plane Name</th>\n        <th>Departure City</th>\n        <th>Arrival City</th>\n        <th>Departure Date</th>\n        <th>Arrival Date</th>\n        <th>Departure Time</th>\n        <th>Arrival Time</th>\n        <th>Normal Seats</th>\n        <th>Normal Seat Price</th>\n        <th>Business Seats</th>\n        <th>Business Seat Price</th>\n      </tr>\n      <tr v-for=\"flight in flights\" :key=\"flight\">\n        <th>{{ flight.planes }}</th>\n        <th>{{ flight.departure_city }}</th>\n        <th>{{ flight.arrival_city }}</th>\n        <th>{{ formatDate(flight.departure_date) }}</th>\n        <th>{{ formatDate(flight.arrival_date) }}</th>\n        <th>{{ flight.departure_time }}</th>\n        <th>{{ flight.arrival_time }}</th>\n        <th>{{ flight.normal_seat }}</th>\n        <th>{{ flight.business_seat }}</th>\n        <th>{{ flight.normal_seat_price }}</th>\n        <th>{{ flight.business_seat_price }}</th>\n      </tr>\n    </table> -->\n    <div class=\"button-container\">\n      <button @click=\"previousPage\">Previous</button>\n      <button @click=\"nextPage\">Next</button>\n    </div>\n  </div>\n</template>\n<script>\nimport api from \"../../api.js\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  name: \"FlightCrud\",\n  setup() {\n    let flights = ref(\"\");\n    onMounted(() => {\n      api\n        .get(\"/flights\")\n        .then((response) => {\n          flights.value = response.data;\n          console.log(flights.value);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    function formatDate(date) {\n      let dateObj = new Date(date);\n      const year = dateObj.getFullYear();\n      const month = dateObj.getMonth() + 1;\n      const day = dateObj.getDate();\n      return `${year}-${month}-${day}`;\n    }\n    return { flights, formatDate };\n  },\n};\n</script>\n<style scoped>\n.container {\n  margin: auto;\n  padding: auto;\n  overflow: scroll;\n}\n.form-container {\n  width: 80%;\n  margin: auto;\n  padding: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n.form-container input {\n  height: 2rem;\n}\n.form-container label {\n  align-self: start;\n}\n.add-flight {\n  width: 5rem;\n  height: 3rem;\n}\n.flight-list-container {\n  overflow: scroll;\n}\n</style>\n"],"mappings":";;gEACEA,mBAAA,CAAe,aAAV,MAAI;;EACJC,KAAK,EAAC;AAAW;;EACdA,KAAK,EAAC;AAAgB;;;EAgBzBA,KAAK,EAAC;AAAuB;;EA6B3BA,KAAK,EAAC;AAAkB;;6DA/C/BC,UAAe,EACfF,mBAAA,CAgBM,OAhBNG,UAgBM,GAfJH,mBAAA,CAcO,QAdPI,UAcO,GAbLC,UAAgC,EAYhCL,mBAAA,CAAiE;IAAzDC,KAAK,EAAC,YAAY;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,SAAA,IAAAD,IAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,E,KAG5DR,mBAAA,CAiCM,OAjCNW,WAiCM,GAhCJC,mBAAA,8/BA2BY,EACZZ,mBAAA,CAGM,OAHNa,WAGM,GAFJb,mBAAA,CAA+C;IAAtCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAK,YAAA,IAAAL,IAAA,CAAAK,YAAA,IAAAN,IAAA,CAAY;KAAE,UAAQ,GACtCR,mBAAA,CAAuC;IAA9BM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAM,QAAA,IAAAN,IAAA,CAAAM,QAAA,IAAAP,IAAA,CAAQ;KAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}