{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"../../api.js\";\nimport { ref, onMounted, computed } from \"vue\";\nimport router from \"../../router\";\nexport default {\n  name: \"FlightCrud\",\n  setup() {\n    let flights = ref(\"\");\n    let currentPage = ref(0);\n    let page = 1;\n    let plane = ref(\"\");\n    let departureCity = ref(\"\");\n    let arrivalCity = ref(\"\");\n    let departureDate = ref(\"\");\n    let departureTime = ref(\"\");\n    let arrivalTime = ref(\"\");\n    let arrivalDate = ref(\"\");\n    let normalSeat = ref(\"\");\n    let normalPrice = ref(\"\");\n    let businessSeat = ref(\"\");\n    let businessPrice = ref(\"\");\n    let cities = ref();\n    const pageSize = 8;\n    onMounted(() => {\n      api.get(\"/cities\").then(response => {\n        cities.value = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n      api.get(\"/flights\").then(response => {\n        flights.value = response.data;\n        console.log(flights.value);\n      }).catch(error => {\n        console.error(error);\n      });\n    });\n    function addflight() {\n      console.log(\" \" + businessSeat.value + \" \" + businessPrice.value);\n      api.post(\"/addflight\", {\n        plane: plane.value,\n        departureCity: departureCity.value,\n        arrivalCity: arrivalCity.value,\n        departureDate: departureDate.value,\n        arrivalDate: arrivalDate.value,\n        departureTime: departureTime.value,\n        arrivalTime: arrivalTime.value,\n        normalSeat: normalSeat.value,\n        normalPrice: normalPrice.value,\n        businessSeat: businessSeat.value,\n        businessPrice: businessPrice.value\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    function formatDate(date) {\n      let dateObj = new Date(date);\n      const year = dateObj.getFullYear();\n      const month = dateObj.getMonth() + 1;\n      const day = dateObj.getDate();\n      return `${year}-${month}-${day}`;\n    }\n    const displayedItems = computed(() => {\n      const start = currentPage.value * pageSize;\n      const end = start + pageSize;\n      return flights.value.slice(start, end);\n    });\n    function previousPage() {\n      if (currentPage.value > 0) {\n        currentPage.value--;\n      }\n    }\n    function nextPage() {\n      if (currentPage.value < Math.floor(flights.value.length / pageSize)) {\n        currentPage.value++;\n      }\n    }\n    function deleteflight(id) {\n      let text = \"Are you sure\";\n      if (confirm(text) == true) {\n        location.reload();\n        api.delete(\"/deleteflight/\" + id).then(response => {\n          console.log(response.data);\n          location.reload();\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        console.log(\"cancelled\");\n      }\n    }\n    function editflight(id) {\n      router.push({\n        name: \"editflight\",\n        query: {\n          id: id\n        }\n      });\n    }\n    return {\n      addflight,\n      flights,\n      formatDate,\n      previousPage,\n      nextPage,\n      displayedItems,\n      plane,\n      editflight,\n      departureCity,\n      arrivalCity,\n      departureDate,\n      departureTime,\n      arrivalTime,\n      arrivalDate,\n      normalSeat,\n      normalPrice,\n      businessSeat,\n      businessPrice,\n      page,\n      deleteflight,\n      cities\n    };\n  }\n};","map":{"version":3,"names":["api","ref","onMounted","computed","router","name","setup","flights","currentPage","page","plane","departureCity","arrivalCity","departureDate","departureTime","arrivalTime","arrivalDate","normalSeat","normalPrice","businessSeat","businessPrice","cities","pageSize","get","then","response","value","data","catch","error","console","log","addflight","post","formatDate","date","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","displayedItems","start","end","slice","previousPage","nextPage","Math","floor","length","deleteflight","id","text","confirm","location","reload","delete","editflight","push","query"],"sources":["/home/prism/Documents/App/deploy/frontend/src/components/Admin/FlightCrud.vue"],"sourcesContent":["<template>\n  <div>crud</div>\n  <div class=\"container\">\n    <form class=\"form-container\">\n      <label for=\"plane\">Plane</label>\n      <input type=\"text\" name=\"\" id=\"plane\" v-model=\"plane\" required />\n\n      <div class=\"city-container\">\n        <label for=\"departure_city\">Departure City</label>\n        <select\n          type=\"text\"\n          name=\"\"\n          id=\"departure_city\"\n          v-model=\"departureCity\"\n          required\n        >\n          <option v-for=\"city in cities\" :key=\"city\" required>\n            {{ city.city_name }}\n          </option>\n        </select>\n        <label for=\"arrival_city\">Arrival City</label>\n        <select\n          type=\"text\"\n          name=\"\"\n          id=\"arrival_city\"\n          v-model=\"arrivalCity\"\n          required\n        >\n          <option v-for=\"city in cities\" :key=\"city\" required>\n            {{ city.city_name }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"date-container\">\n        <label for=\"departure_date\">Departure Date</label>\n        <input\n          type=\"date\"\n          name=\"\"\n          id=\"departure_date\"\n          v-model=\"departureDate\"\n          required\n        />\n        <label for=\"arrival_date\">Arrival Date</label>\n        <input\n          type=\"date\"\n          name=\"\"\n          id=\"arrival_date\"\n          v-model=\"arrivalDate\"\n          required\n        />\n      </div>\n\n      <div class=\"time-container\">\n        <label for=\"departure_time\">Departure Time</label>\n        <input\n          type=\"time\"\n          name=\"\"\n          id=\"departure_time\"\n          v-model=\"departureTime\"\n          required\n        />\n        <label for=\"arrival_time\">Arrival Time</label>\n        <input\n          type=\"time\"\n          name=\"\"\n          id=\"arrival_time\"\n          v-model=\"arrivalTime\"\n          required\n        />\n      </div>\n\n      <div class=\"seat-container\">\n        <div class=\"normal-seat-container\">\n          <label for=\"normal_seat\">Normal Seat Available</label>\n          <input\n            type=\"number\"\n            name=\"\"\n            id=\"normal_seat\"\n            v-model=\"normalSeat\"\n            required\n          />\n          <label for=\"normal_seat_price\">Normal Seat Price</label>\n          <input\n            type=\"number\"\n            name=\"\"\n            id=\"normal_seat_price\"\n            v-model=\"normalPrice\"\n            required\n          />\n        </div>\n\n        <div class=\"business-seat-container\">\n          <label for=\"business_seat\">Business Seat Available</label>\n          <input\n            type=\"number\"\n            name=\"\"\n            id=\"business_seat\"\n            v-model=\"businessSeat\"\n            required\n          />\n          <label for=\"business_seat_price\">Business Seat Price</label>\n          <input\n            type=\"number\"\n            name=\"\"\n            id=\"business_seat_price\"\n            v-model=\"businessPrice\"\n            required\n          />\n        </div>\n      </div>\n\n      <button class=\"add-flight\" @click=\"addflight\">Add Flight</button>\n    </form>\n  </div>\n  <div class=\"button-container\">\n    <button @click=\"previousPage\">Previous</button>\n    <button @click=\"nextPage\">Next</button>\n    <p>{{ page.value + 1 }}</p>\n  </div>\n  <div class=\"flight-list-container\">\n    <table class=\"flight-list\">\n      <tr>\n        <th>Plane Name</th>\n        <th>Departure City</th>\n        <th>Arrival City</th>\n        <th>Departure Date</th>\n        <th>Arrival Date</th>\n        <th>Departure Time</th>\n        <th>Arrival Time</th>\n        <th>Normal Seats</th>\n        <th>Business Seats</th>\n        <th>Normal Seat Price</th>\n        <th>Business Seat Price</th>\n        <th>Operation</th>\n      </tr>\n      <tr\n        class=\"individual-flight\"\n        v-for=\"flight in displayedItems\"\n        :key=\"flight\"\n      >\n        <th>{{ flight.planes }}</th>\n        <th>{{ flight.departure_city }}</th>\n        <th>{{ flight.arrival_city }}</th>\n        <th>{{ formatDate(flight.departure_date) }}</th>\n        <th>{{ formatDate(flight.arrival_date) }}</th>\n        <th>{{ flight.departure_time }}</th>\n        <th>{{ flight.arrival_time }}</th>\n        <th>{{ flight.normal_seat }}</th>\n        <th>{{ flight.business_seat }}</th>\n        <th>{{ flight.normal_seat_price }}</th>\n        <th>{{ flight.business_seat_price }}</th>\n        <th>\n          <button :id=\"flight_id\" @click=\"editflight(flight.flight_id)\">\n            Edit\n          </button>\n          <button\n            :id=\"flight.flight_id\"\n            @click=\"deleteflight(flight.flight_id)\"\n          >\n            Delete\n          </button>\n        </th>\n      </tr>\n    </table>\n  </div>\n</template>\n<script>\nimport api from \"../../api.js\";\nimport { ref, onMounted, computed } from \"vue\";\nimport router from \"../../router\";\n\nexport default {\n  name: \"FlightCrud\",\n  setup() {\n    let flights = ref(\"\");\n    let currentPage = ref(0);\n    let page = 1;\n    let plane = ref(\"\");\n    let departureCity = ref(\"\");\n    let arrivalCity = ref(\"\");\n    let departureDate = ref(\"\");\n    let departureTime = ref(\"\");\n    let arrivalTime = ref(\"\");\n    let arrivalDate = ref(\"\");\n    let normalSeat = ref(\"\");\n    let normalPrice = ref(\"\");\n    let businessSeat = ref(\"\");\n    let businessPrice = ref(\"\");\n    let cities = ref();\n    const pageSize = 8;\n    onMounted(() => {\n      api\n        .get(\"/cities\")\n        .then((response) => {\n          cities.value = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      api\n        .get(\"/flights\")\n        .then((response) => {\n          flights.value = response.data;\n          console.log(flights.value);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    function addflight() {\n      console.log(\" \" + businessSeat.value + \" \" + businessPrice.value);\n      api\n        .post(\"/addflight\", {\n          plane: plane.value,\n          departureCity: departureCity.value,\n          arrivalCity: arrivalCity.value,\n          departureDate: departureDate.value,\n          arrivalDate: arrivalDate.value,\n          departureTime: departureTime.value,\n          arrivalTime: arrivalTime.value,\n          normalSeat: normalSeat.value,\n          normalPrice: normalPrice.value,\n          businessSeat: businessSeat.value,\n          businessPrice: businessPrice.value,\n        })\n        .then((response) => {\n          console.log(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    function formatDate(date) {\n      let dateObj = new Date(date);\n      const year = dateObj.getFullYear();\n      const month = dateObj.getMonth() + 1;\n      const day = dateObj.getDate();\n      return `${year}-${month}-${day}`;\n    }\n    const displayedItems = computed(() => {\n      const start = currentPage.value * pageSize;\n      const end = start + pageSize;\n      return flights.value.slice(start, end);\n    });\n    function previousPage() {\n      if (currentPage.value > 0) {\n        currentPage.value--;\n      }\n    }\n\n    function nextPage() {\n      if (currentPage.value < Math.floor(flights.value.length / pageSize)) {\n        currentPage.value++;\n      }\n    }\n    function deleteflight(id) {\n      let text = \"Are you sure\";\n      if (confirm(text) == true) {\n        location.reload();\n        api\n          .delete(\"/deleteflight/\" + id)\n          .then((response) => {\n            console.log(response.data);\n            location.reload();\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      } else {\n        console.log(\"cancelled\");\n      }\n    }\n    function editflight(id) {\n      router.push({\n        name: \"editflight\",\n        query: {\n          id: id,\n        },\n      });\n    }\n    return {\n      addflight,\n      flights,\n      formatDate,\n      previousPage,\n      nextPage,\n      displayedItems,\n      plane,\n      editflight,\n      departureCity,\n      arrivalCity,\n      departureDate,\n      departureTime,\n      arrivalTime,\n      arrivalDate,\n      normalSeat,\n      normalPrice,\n      businessSeat,\n      businessPrice,\n      page,\n      deleteflight,\n      cities,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  margin: auto;\n  padding: auto;\n}\n.form-container {\n  width: 80%;\n  margin: auto;\n  padding: auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  align-items: space-between;\n  align-content: space-between;\n  justify-content: space-between;\n  justify-items: space-between;\n}\n.form-container input {\n  height: 2rem;\n}\n.form-container label {\n  align-self: start;\n}\n.add-flight {\n  width: 5rem;\n  height: 3rem;\n}\n.flight-list-container {\n  margin-bottom: 10rem;\n}\nth,\ntd {\n  padding-bottom: 1rem;\n  vertical-align: top;\n  border: 1px solid black;\n  width: 100px;\n}\ntr {\n  vertical-align: top;\n}\ntr:nth-child(even) {\n  background-color: #d6d6d6;\n}\ntable {\n  width: 100%;\n  border-spacing: 3px;\n  height: 30rem;\n}\n#plane {\n  width: 70%;\n}\n.container {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 10px;\n}\n\n.form-container {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n}\n\n.label-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.city-container,\n.date-container,\n.time-container,\n.normal-seat-container,\n.business-seat-container {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n}\n\n.label-container label,\n.city-container label,\n.date-container label,\n.time-container label,\n.normal-seat-container label,\n.business-seat-container label {\n  margin-bottom: 5px;\n}\n\n.add-flight {\n  grid-column: 1 / -1;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}