{"ast":null,"code":"import { ref /* onMounted */ } from \"vue\";\nimport axios from \"axios\";\nimport VueCookies from \"vue-cookie\";\nexport default {\n  setup() {\n    let username = ref(\"\");\n    let password = ref(\"\");\n    let notification = ref(\"\");\n    let token = ref(\"\");\n    let isLogin = ref(false);\n    function login() {\n      axios.post(\"http://localhost:3000/api/login\", {\n        username: username.value,\n        password: password.value\n      }).then(response => {\n        console.log(response.data);\n        this.notification = response.data.notification;\n        this.token = response.data.token;\n        console.log(response.data.isLogin);\n        VueCookies.set(\"token\", this.token);\n        if (response.data.isLogin === true) {\n          setTimeout(() => {\n            console.log(\"log dc\");\n          }, 1000);\n        } else {\n          console.log(\"khong log dc\");\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    function change() {\n      console.log(this.token);\n      let token = this.token;\n      axios.get(\"http://localhost:3000/check/\" + token).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    return {\n      username,\n      password,\n      login,\n      notification,\n      change,\n      token,\n      isLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","VueCookies","setup","username","password","notification","token","isLogin","login","post","value","then","response","console","log","data","set","setTimeout","catch","error","change","get"],"sources":["/home/prism/Documents/flyticket/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <p v-if=\"isLogin\">da log in roi em oi</p>\n  <button @click=\"doi\"> log </button>\n  <form class=\"login-form\">\n    <p>Register an account</p>\n    <input\n      type=\"text\"\n      name=\"\"\n      id=\"\"\n      v-model=\"username\"\n      placeholder=\"Your username\"\n    />\n    <input\n      type=\"password\"\n      name=\"\"\n      id=\"\"\n      v-model=\"password\"\n      placeholder=\"Your password\"\n    />\n    <button class=\"login-button\" @click=\"login\">Login</button>\n  </form>\n  <p>{{ notification }}</p>\n  <form>\n    <button @click=\"change\" class=\"login-button\">check log</button>\n  </form>\n  <router-link to=\"/Register\"\n    >Don't have an account ? Register here\n  </router-link>\n</template>\n\n<script>\nimport { ref /* onMounted */ } from \"vue\";\nimport axios from \"axios\";\nimport VueCookies from \"vue-cookie\";\nexport default {\n  setup() {\n    let username = ref(\"\");\n    let password = ref(\"\");\n    let notification = ref(\"\");\n    let token = ref(\"\");\n    let isLogin = ref(false);\n    function login() {\n      axios\n        .post(\"http://localhost:3000/api/login\", {\n          username: username.value,\n          password: password.value,\n        })\n        .then((response) => {\n          console.log(response.data);\n          this.notification = response.data.notification;\n          this.token = response.data.token;\n          console.log(response.data.isLogin);\n          VueCookies.set(\"token\", this.token);\n          if (response.data.isLogin === true) {\n            setTimeout(() => {\n              console.log(\"log dc\");\n            }, 1000);\n          } else {\n            console.log(\"khong log dc\");\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    function change() {\n      console.log(this.token);\n      let token = this.token;\n      axios\n        .get(\"http://localhost:3000/check/\" + token)\n        .then((response) => {\n          console.log(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    return {\n      username,\n      password,\n      login,\n      notification,\n      change,\n      token,\n      isLogin,\n    };\n  },\n};\n</script>\n<style>\n.login-form {\n  margin: auto;\n  padding: auto;\n  border-radius: 2rem;\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 2rem;\n  background-color: rgb(255, 255, 255);\n}\ntextarea:focus,\ninput:focus {\n  outline: none;\n}\n.login-form input {\n  height: 2rem;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n}\n.login-button {\n  width: 5rem;\n  height: 3rem;\n  border: none;\n  background-color: aquamarine;\n}\n</style>\n"],"mappings":"AA+BA,SAASA,GAAE,CAAE,uBAAuB,KAAK;AACzC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,UAAS,MAAO,YAAY;AACnC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,IAAIC,QAAO,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIK,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIM,YAAW,GAAIN,GAAG,CAAC,EAAE,CAAC;IAC1B,IAAIO,KAAI,GAAIP,GAAG,CAAC,EAAE,CAAC;IACnB,IAAIQ,OAAM,GAAIR,GAAG,CAAC,KAAK,CAAC;IACxB,SAASS,KAAKA,CAAA,EAAG;MACfR,KAAI,CACDS,IAAI,CAAC,iCAAiC,EAAE;QACvCN,QAAQ,EAAEA,QAAQ,CAACO,KAAK;QACxBN,QAAQ,EAAEA,QAAQ,CAACM;MACrB,CAAC,EACAC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;QAC1B,IAAI,CAACV,YAAW,GAAIO,QAAQ,CAACG,IAAI,CAACV,YAAY;QAC9C,IAAI,CAACC,KAAI,GAAIM,QAAQ,CAACG,IAAI,CAACT,KAAK;QAChCO,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACR,OAAO,CAAC;QAClCN,UAAU,CAACe,GAAG,CAAC,OAAO,EAAE,IAAI,CAACV,KAAK,CAAC;QACnC,IAAIM,QAAQ,CAACG,IAAI,CAACR,OAAM,KAAM,IAAI,EAAE;UAClCU,UAAU,CAAC,MAAM;YACfJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;UACvB,CAAC,EAAE,IAAI,CAAC;QACV,OAAO;UACLD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC7B;MACF,CAAC,EACAI,KAAK,CAAEC,KAAK,IAAK;QAChBN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;IACA,SAASC,MAAMA,CAAA,EAAG;MAChBP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,KAAK,CAAC;MACvB,IAAIA,KAAI,GAAI,IAAI,CAACA,KAAK;MACtBN,KAAI,CACDqB,GAAG,CAAC,8BAA6B,GAAIf,KAAK,EAC1CK,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC5B,CAAC,EACAG,KAAK,CAAEC,KAAK,IAAK;QAChBN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;IACA,OAAO;MACLhB,QAAQ;MACRC,QAAQ;MACRI,KAAK;MACLH,YAAY;MACZe,MAAM;MACNd,KAAK;MACLC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}