{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, \"containter\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["/home/prism/Documents/flyticket/src/views/OrderHistory.vue"],"sourcesContent":["<template>\n  <div>containter</div>\n</template>\n<script>\nimport { onMounted, computed /* onUpdated */ } from \"vue\";\nimport api from \"../api\";\nimport { useRoute } from \"vue-router\";\nimport { ref } from \"vue\";\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let flightId = route.query.id;\n    let flightDetail = ref(\"\");\n    let normalQuantity = ref(0);\n    let businessQuantity = ref(0);\n    let normalPrice = ref(\"\");\n    let businessPrice = ref(\"\");\n    let plane = ref(\"\");\n    let departureCity = ref(\"\");\n    let arrivalCity = ref(\"\");\n    let departureDate = ref(\"\");\n    let departureTime = ref(\"\");\n    let arrivalTime = ref(\"\");\n    let arrivalDate = ref(\"\");\n    let normalSeat = ref(\"\");\n    let normalSeatPrice = ref(\"\");\n    let businessSeat = ref(\"\");\n    let businessSeatPrice = ref(\"\");\n    let user = ref(\"\");\n    let userId = ref();\n    let userInfo = ref(\"\");\n\n    onMounted(() => {\n      // console.log(flightId);\n      api\n        .get(\"/orderflight/\" + flightId, {})\n        .then((response) => {\n          flightDetail.value = response.data;\n          console.log(flightDetail.value);\n          plane.value = flightDetail.value[0].planes;\n          departureCity.value = flightDetail.value[0].departure_city;\n          arrivalCity.value = flightDetail.value[0].arrival_city;\n          normalPrice.value = flightDetail.value[0].normal_seat_price;\n          businessPrice.value = flightDetail.value[0].business_seat_price;\n          normalSeat.value = flightDetail.value[0].normal_seat;\n          businessSeat.value = flightDetail.value[0].business_seat;\n          console.log(businessSeat.value + \" \" + normalSeat.value);\n          // console.log(normalPrice.value + \" \" + businessPrice.value);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      const token = Cookies.get(\"token\");\n      if (token) {\n        user.value = jwtDecode(token);\n        userId.value = user.value.id;\n        console.log(userId.value);\n        api\n          .get(\"/userprofile/\" + userId.value, {})\n          .then((response) => {\n            userInfo.value = response.data;\n            console.log(userInfo.value);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    });\n    function order() {\n      api.post(\"/order/\" + flightId, {\n        userId: userId.value,\n        normalSeatOrder: normalQuantity.value,\n        businessSeatOrder: businessQuantity.value,\n        totalPaid: totalPrice.value,\n      });\n      // .then((response) => {\n      //   // this.flightlist = response.data;\n      //   // console.log(this.flightlist);\n      // })\n      // .catch((error) => {\n      //   console.log(error);\n      // });\n    }\n    // onUpdated(() => {\n    //   console.log(totalPrice.value);\n    // });\n    return {\n      flightId,\n      flightDetail,\n      totalPrice,\n      normalQuantity,\n      businessQuantity,\n      normalPrice,\n      businessPrice,\n      plane,\n      departureCity,\n      arrivalCity,\n      departureDate,\n      departureTime,\n      arrivalTime,\n      arrivalDate,\n      normalSeat,\n      normalSeatPrice,\n      businessSeat,\n      businessSeatPrice,\n      order,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  margin-top: 10rem;\n}\n.priceContainer {\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  margin: auto;\n  padding: auto;\n}\n.totalPrice {\n  color: red;\n  font-size: larger;\n}\ninput[type=\"number\"],\nselect {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\np {\n  font-size: large;\n  color: rgb(0, 165, 110);\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAAqB,aAAhB,YAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}