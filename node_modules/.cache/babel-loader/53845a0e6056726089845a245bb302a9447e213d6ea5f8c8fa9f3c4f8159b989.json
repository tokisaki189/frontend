{"ast":null,"code":"import { ref, computed, watch } from \"vue\";\nexport default {\n  setup() {\n    const count = ref(0);\n\n    // Define a computed property using `computed`\n    const doubleCount = computed(() => count.value * 2);\n\n    // Define a watcher using `watch`\n    watch(() => count.value, (newCount, oldCount) => {\n      console.log(`Count changed from ${oldCount} to ${newCount}`);\n    });\n\n    // Define a method\n    const increment = () => {\n      count.value++;\n    };\n\n    // Return the values and functions to be used in the template\n    return {\n      count,\n      doubleCount,\n      increment\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","setup","count","doubleCount","value","newCount","oldCount","console","log","increment"],"sources":["/home/prism/Documents/flyticket/src/components/Admin/DashBoard.vue"],"sourcesContent":["<!-- <template>\n  <p>something</p>\n\n  <div class=\"container\">\n    <div class=\"d\"></div>\n  </div>\n  <div class=\"chart-container\">\n    <div class=\"chart\">\n      <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    </div>\n  </div>\n  <button @click=\"nextDay()\">+</button>\n  <p>{{ data }}</p>\n</template>\n<script>\nimport { ref } from \"vue\";\nimport { Bar } from \"vue-chartjs\";\nimport { computed, watch } from \"vue\";\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from \"chart.js\";\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n);\n\nexport default {\n  name: \"DashBoard\",\n  components: { Bar },\n  setup() {\n    let dataset = [\n      79, 42, 15, 68, 91, 34, 52, 23, 11, 86, 59, 72, 7, 50, 98, 64, 93, 3, 28,\n      89, 71, 96, 80, 18, 47, 39, 67, 9, 77,\n    ];\n\n    let start = ref(0);\n    let end = ref(7);\n    let data = computed(() => {\n      return dataset.slice(start.value, end.value);\n    });\n    console.log(data);\n    let chartData = ref({\n      labels: [\"1th\", \"2th\", \"3th\", \" 4th\", \"5th\", \"6th\", \"7th\"],\n      datasets: [\n        {\n          data: data.value,\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.2)\",\n            \"rgba(54, 162, 235, 0.2)\",\n            \"rgba(255, 206, 86, 0.2)\",\n            \"rgba(75, 192, 192, 0.2)\",\n            \"rgba(153, 102, 255, 0.2)\",\n            \"rgba(255, 159, 64, 0.2)\",\n          ],\n          borderColor: [\n            \"rgba(255, 99, 132, 1)\",\n            \"rgba(54, 162, 235, 1)\",\n            \"rgba(255, 206, 86, 1)\",\n            \"rgba(75, 192, 192, 1)\",\n            \"rgba(153, 102, 255, 1)\",\n            \"rgba(255, 159, 64, 1)\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    });\n    let chartOptions = {\n      responsive: true,\n    };\n    function nextDay() {\n      start.value++;\n      end.value++;\n    }\n    watch(\n      () => {\n        data.value,\n          (newValue, oldValue) => {\n            console.log(newValue, oldValue);\n          };\n      },\n      { deep: true }\n    );\n    return { chartData, chartOptions, dataset, start, end, data, nextDay };\n  },\n};\n</script>\n<style>\n.chart {\n  width: 40%;\n}\n.chart-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n</style> -->\n<template>\n  <div>\n    <p>Count: {{ count }}</p>\n    <p>Double Count: {{ doubleCount }}</p>\n    <button @click=\"increment\">Increment</button>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch } from \"vue\";\n\nexport default {\n  setup() {\n    const count = ref(0);\n\n    // Define a computed property using `computed`\n    const doubleCount = computed(() => count.value * 2);\n\n    // Define a watcher using `watch`\n    watch(\n      () => count.value,\n      (newCount, oldCount) => {\n        console.log(`Count changed from ${oldCount} to ${newCount}`);\n      }\n    );\n\n    // Define a method\n    const increment = () => {\n      count.value++;\n    };\n\n    // Return the values and functions to be used in the template\n    return {\n      count,\n      doubleCount,\n      increment,\n    };\n  },\n};\n</script>\n"],"mappings":"AAmHA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAI,QAAS,KAAK;AAE1C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,GAAG,CAAC,CAAC,CAAC;;IAEpB;IACA,MAAMK,WAAU,GAAIJ,QAAQ,CAAC,MAAMG,KAAK,CAACE,KAAI,GAAI,CAAC,CAAC;;IAEnD;IACAJ,KAAK,CACH,MAAME,KAAK,CAACE,KAAK,EACjB,CAACC,QAAQ,EAAEC,QAAQ,KAAK;MACtBC,OAAO,CAACC,GAAG,CAAE,sBAAqBF,QAAQ,OAAOD,QAAS,EAAC,CAAC;IAC9D,EACD;;IAED;IACA,MAAMI,SAAQ,GAAIA,CAAA,KAAM;MACtBP,KAAK,CAACE,KAAK,EAAE;IACf,CAAC;;IAED;IACA,OAAO;MACLF,KAAK;MACLC,WAAW;MACXM;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}