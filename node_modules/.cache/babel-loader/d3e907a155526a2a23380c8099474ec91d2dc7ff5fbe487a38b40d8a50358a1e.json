{"ast":null,"code":"import { onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport api from \"../api\";\nexport default {\n  setup() {\n    let route = useRoute();\n    let id = route.query.id;\n    let plane = ref();\n    let businessSeatOrder = ref();\n    let normalSeatOrder = ref();\n    let newbusinessSeatOrder = ref();\n    let newnormalSeatOrder = ref();\n    let price = ref();\n    let newprice = ref();\n    let departureDate = ref();\n    let departureCity = ref();\n    let arrivalDate = ref();\n    let arrivalCity = ref();\n    onMounted(() => {\n      console.log(id);\n      api.get(\"/orderEdit/\" + id).then(response => {\n        flightDetail.value = response.data;\n        plane.value = flightDetail.value[0].planes;\n        departureCity.value = flightDetail.value[0].departure_city;\n        departureDate.value = flightDetail.value[0].departure_date;\n        arrivalDate.value = flightDetail.value[0].arrival_date;\n        departureTime.value = flightDetail.value[0].departure_time;\n        arrivalTime.value = flightDetail.value[0].arrival_time;\n        arrivalCity.value = flightDetail.value[0].arrival_city;\n        normalPrice.value = flightDetail.value[0].normal_seat_price;\n        businessPrice.value = flightDetail.value[0].business_seat_price;\n        normalSeat.value = flightDetail.value[0].normal_seat;\n        businessSeat.value = flightDetail.value[0].business_seat;\n      }).catch(error => {\n        console.error(error);\n      });\n    });\n    return {\n      plane,\n      businessSeatOrder,\n      normalSeatOrder,\n      newbusinessSeatOrder,\n      newnormalSeatOrder,\n      price,\n      newprice,\n      departureCity,\n      departureDate,\n      arrivalDate,\n      arrivalCity\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","useRoute","api","setup","route","id","query","plane","businessSeatOrder","normalSeatOrder","newbusinessSeatOrder","newnormalSeatOrder","price","newprice","departureDate","departureCity","arrivalDate","arrivalCity","console","log","get","then","response","flightDetail","value","data","planes","departure_city","departure_date","arrival_date","departureTime","departure_time","arrivalTime","arrival_time","arrival_city","normalPrice","normal_seat_price","businessPrice","business_seat_price","normalSeat","normal_seat","businessSeat","business_seat","catch","error"],"sources":["/home/prism/Documents/flyticket/src/views/EditView.vue"],"sourcesContent":["<template>\n  <div>\n    <p></p>\n  </div>\n</template>\n<script>\nimport { onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nimport api from \"../api\";\nexport default {\n  setup() {\n    let route = useRoute();\n    let id = route.query.id;\n    let plane = ref();\n    let businessSeatOrder = ref();\n    let normalSeatOrder = ref();\n    let newbusinessSeatOrder = ref();\n    let newnormalSeatOrder = ref();\n    let price = ref();\n    let newprice = ref();\n    let departureDate = ref();\n    let departureCity = ref();\n    let arrivalDate = ref();\n    let arrivalCity = ref();\n    onMounted(() => {\n      console.log(id);\n      api\n        .get(\"/orderEdit/\" + id)\n        .then((response) => {\n          flightDetail.value = response.data;\n          plane.value = flightDetail.value[0].planes;\n          departureCity.value = flightDetail.value[0].departure_city;\n          departureDate.value = flightDetail.value[0].departure_date;\n          arrivalDate.value = flightDetail.value[0].arrival_date;\n          departureTime.value = flightDetail.value[0].departure_time;\n          arrivalTime.value = flightDetail.value[0].arrival_time;\n          arrivalCity.value = flightDetail.value[0].arrival_city;\n          normalPrice.value = flightDetail.value[0].normal_seat_price;\n          businessPrice.value = flightDetail.value[0].business_seat_price;\n          normalSeat.value = flightDetail.value[0].normal_seat;\n          businessSeat.value = flightDetail.value[0].business_seat;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    return {\n      plane,\n      businessSeatOrder,\n      normalSeatOrder,\n      newbusinessSeatOrder,\n      newnormalSeatOrder,\n      price,\n      newprice,\n      departureCity,\n      departureDate,\n      arrivalDate,\n      arrivalCity,\n    };\n  },\n};\n</script>\n<style></style>\n"],"mappings":"AAMA,SAASA,SAAS,EAAEC,GAAE,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,YAAY;AAErC,OAAOC,GAAE,MAAO,QAAQ;AACxB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,IAAIC,KAAI,GAAIH,QAAQ,EAAE;IACtB,IAAII,EAAC,GAAID,KAAK,CAACE,KAAK,CAACD,EAAE;IACvB,IAAIE,KAAI,GAAIP,GAAG,EAAE;IACjB,IAAIQ,iBAAgB,GAAIR,GAAG,EAAE;IAC7B,IAAIS,eAAc,GAAIT,GAAG,EAAE;IAC3B,IAAIU,oBAAmB,GAAIV,GAAG,EAAE;IAChC,IAAIW,kBAAiB,GAAIX,GAAG,EAAE;IAC9B,IAAIY,KAAI,GAAIZ,GAAG,EAAE;IACjB,IAAIa,QAAO,GAAIb,GAAG,EAAE;IACpB,IAAIc,aAAY,GAAId,GAAG,EAAE;IACzB,IAAIe,aAAY,GAAIf,GAAG,EAAE;IACzB,IAAIgB,WAAU,GAAIhB,GAAG,EAAE;IACvB,IAAIiB,WAAU,GAAIjB,GAAG,EAAE;IACvBD,SAAS,CAAC,MAAM;MACdmB,OAAO,CAACC,GAAG,CAACd,EAAE,CAAC;MACfH,GAAE,CACCkB,GAAG,CAAC,aAAY,GAAIf,EAAE,EACtBgB,IAAI,CAAEC,QAAQ,IAAK;QAClBC,YAAY,CAACC,KAAI,GAAIF,QAAQ,CAACG,IAAI;QAClClB,KAAK,CAACiB,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM;QAC1CX,aAAa,CAACS,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACG,cAAc;QAC1Db,aAAa,CAACU,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACI,cAAc;QAC1DZ,WAAW,CAACQ,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACK,YAAY;QACtDC,aAAa,CAACN,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACO,cAAc;QAC1DC,WAAW,CAACR,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACS,YAAY;QACtDhB,WAAW,CAACO,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACU,YAAY;QACtDC,WAAW,CAACX,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACY,iBAAiB;QAC3DC,aAAa,CAACb,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACc,mBAAmB;QAC/DC,UAAU,CAACf,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACgB,WAAW;QACpDC,YAAY,CAACjB,KAAI,GAAID,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAACkB,aAAa;MAC1D,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChB1B,OAAO,CAAC0B,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO;MACLrC,KAAK;MACLC,iBAAiB;MACjBC,eAAe;MACfC,oBAAoB;MACpBC,kBAAkB;MAClBC,KAAK;MACLC,QAAQ;MACRE,aAAa;MACbD,aAAa;MACbE,WAAW;MACXC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}