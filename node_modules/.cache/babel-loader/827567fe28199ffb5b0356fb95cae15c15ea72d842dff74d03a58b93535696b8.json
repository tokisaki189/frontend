{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1bd2ab94\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Dash Board\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"outer\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"total\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Total Revenue of Today\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Total Revenue of This Month\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"chart-container\"\n};\nconst _hoisted_8 = {\n  class: \"chart\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"load-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_count_up = _resolveComponent(\"count-up\");\n  const _component_Bar = _resolveComponent(\"Bar\");\n  const _component_BeatLoader = _resolveComponent(\"BeatLoader\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", null, [_hoisted_5, _createVNode(_component_count_up, {\n    \"end-val\": $setup.today\n  }, null, 8 /* PROPS */, [\"end-val\"])]), _createElementVNode(\"div\", null, [_hoisted_6, _createElementVNode(\"span\", null, _toDisplayString($setup.thismonth), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [$setup.isDataReady ? (_openBlock(), _createBlock(_component_Bar, {\n    key: 0,\n    options: $setup.chartOptions,\n    data: $setup.chartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_BeatLoader, {\n    loading: _ctx.loading,\n    color: '#56c1ff',\n    size: _ctx.size\n  }, null, 8 /* PROPS */, [\"loading\", \"size\"])]))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_count_up","$setup","today","_hoisted_6","_toDisplayString","thismonth","_hoisted_7","_hoisted_8","isDataReady","_createBlock","_component_Bar","options","chartOptions","data","chartData","_createElementBlock","_hoisted_9","_component_BeatLoader","loading","_ctx","color","size"],"sources":["/home/prism/Documents/flyticket/src/components/Admin/DashBoard.vue"],"sourcesContent":["<template>\n  <p>Dash Board</p>\n  <div class=\"outer\">\n    <div class=\"container\">\n      <div class=\"total\">\n        <div>\n          <p>Total Revenue of Today</p>\n          <count-up :end-val=\"today\"></count-up>\n        </div>\n        <div>\n          <p>Total Revenue of This Month</p>\n          <span>{{ thismonth }}</span>\n        </div>\n      </div>\n    </div>\n    <div class=\"chart-container\">\n      <div class=\"chart\">\n        <Bar v-if=\"isDataReady\" :options=\"chartOptions\" :data=\"chartData\" />\n        <div v-else class=\"load-container\">\n          <BeatLoader\n            :loading=\"loading\"\n            :color=\"'#56c1ff'\"\n            :size=\"size\"\n          ></BeatLoader>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { ref, onMounted } from \"vue\";\nimport api from \"../../api\";\nimport BeatLoader from \"vue-spinner/src/BeatLoader.vue\";\nimport { Bar } from \"vue-chartjs\";\nimport CountUp from \"vue-countup-v3\";\n\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from \"chart.js\";\nChartJS.register(Title, Tooltip, BarElement, CategoryScale, LinearScale);\n\nexport default {\n  name: \"DashBoard\",\n  components: { Bar, BeatLoader, CountUp },\n  setup() {\n    let dateData = ref([]);\n    let today = ref(\"\");\n    let thismonth = ref(\"\");\n    let isDataReady = ref(false);\n    setTimeout(() => {\n      isDataReady.value = true;\n    }, 1000);\n    let chartData = ref({\n      labels: [\n        \"1st\",\n        \"2nd\",\n        \"3rd\",\n        \"4th\",\n        \"5th\",\n        \"6th\",\n        \"7th\",\n        \"8th\",\n        \"9th\",\n        \"10th\",\n        \"11th\",\n        \"12th\",\n        \"13th\",\n        \"14th\",\n        \"15th\",\n        \"16th\",\n        \"17th\",\n        \"18th\",\n        \"19th\",\n        \"20th\",\n        \"21th\",\n        \"22th\",\n        \"23th\",\n        \"24th\",\n        \"25th\",\n        \"26th\",\n        \"27th\",\n        \"28th\",\n        \"29th\",\n        \"30th\",\n      ],\n      datasets: [\n        {\n          data: [],\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.2)\",\n            \"rgba(54, 162, 235, 0.2)\",\n            \"rgba(255, 206, 86, 0.2)\",\n            \"rgba(75, 192, 192, 0.2)\",\n            \"rgba(153, 102, 255, 0.2)\",\n            \"rgba(255, 159, 64, 0.2)\",\n            \"rgba(128, 0, 0, 0.2)\",\n            \"rgba(0, 128, 0, 0.2)\",\n            \"rgba(0, 0, 128, 0.2)\",\n            \"rgba(128, 128, 0, 0.2)\",\n            \"rgba(128, 0, 128, 0.2)\",\n            \"rgba(0, 128, 128, 0.2)\",\n            \"rgba(255, 0, 0, 0.2)\",\n            \"rgba(0, 255, 0, 0.2)\",\n            \"rgba(0, 0, 255, 0.2)\",\n            \"rgba(255, 255, 0, 0.2)\",\n            \"rgba(255, 0, 255, 0.2)\",\n            \"rgba(0, 255, 255, 0.2)\",\n          ],\n          borderColor: [\n            \"rgba(255, 99, 132, 1)\",\n            \"rgba(54, 162, 235, 1)\",\n            \"rgba(255, 206, 86, 1)\",\n            \"rgba(75, 192, 192, 1)\",\n            \"rgba(153, 102, 255, 1)\",\n            \"rgba(255, 159, 64, 1)\",\n            \"rgba(128, 0, 0, 1)\",\n            \"rgba(0, 128, 0, 1)\",\n            \"rgba(0, 0, 128, 1)\",\n            \"rgba(128, 128, 0, 1)\",\n            \"rgba(128, 0, 128, 1)\",\n            \"rgba(0, 128, 128, 1)\",\n            \"rgba(255, 0, 0, 1)\",\n            \"rgba(0, 255, 0, 1)\",\n            \"rgba(0, 0, 255, 1)\",\n            \"rgba(255, 255, 0, 1)\",\n            \"rgba(255, 0, 255, 1)\",\n            \"rgba(192, 192, 192, 1)\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    });\n    let chartOptions = {\n      responsive: true,\n    };\n    onMounted(() => {\n      api\n        .get(\"/statistic/today\")\n        .then((response) => {\n          today.value = response.data.result;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      api\n        .get(\"/statistic/thismonth\")\n        .then((response) => {\n          thismonth.value = response.data.result;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      api\n        .get(\"/statistic/total\")\n        .then((response) => {\n          dateData.value = response.data;\n          const maxDay = Math.max(...dateData.value.map((item) => item.day));\n          const sumArray = Array.from({ length: maxDay }, () => 0);\n          dateData.value.forEach((item) => {\n            sumArray[item.day - 1] = Number(item.total_price_sum);\n          });\n          chartData.value.datasets[0].data = sumArray;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    return { chartData, chartOptions, today, thismonth, isDataReady };\n  },\n};\n</script>\n<style scoped>\n.container {\n  display: flex;\n}\n.chart {\n  width: 90rem;\n  height: 40rem;\n}\n.chart-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  background-color: white;\n  padding-left: 1rem;\n  border-radius: 1rem;\n}\n.total {\n  display: flex;\n  flex-direction: column;\n  gap: 10rem;\n  width: 100%;\n  height: 20rem;\n  padding-left: 2rem;\n}\n.total div {\n  width: 10rem;\n  height: 10rem;\n  background-color: rgb(255, 255, 255);\n  border-radius: 1rem;\n  /* box-shadow: 10px 10px 50px rgb(167, 167, 167); */\n  color: gray;\n  padding-top: 3rem;\n}\n.load-container {\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n}\n.outer {\n  display: flex;\n  flex-direction: row;\n  gap: 1rem;\n}\nCountUp {\n  background-color: red;\n}\n</style>\n"],"mappings":";;gEACEA,mBAAA,CAAiB,WAAd,YAAU;;EACRC,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAO;gEAEdD,mBAAA,CAA6B,WAA1B,wBAAsB;gEAIzBA,mBAAA,CAAkC,WAA/B,6BAA2B;;EAK/BC,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAO;;;EAEJA,KAAK,EAAC;;;;;;6DAjBxBC,UAAiB,EACjBF,mBAAA,CAyBM,OAzBNG,UAyBM,GAxBJH,mBAAA,CAWM,OAXNI,UAWM,GAVJJ,mBAAA,CASM,OATNK,UASM,GARJL,mBAAA,CAGM,cAFJM,UAA6B,EAC7BC,YAAA,CAAsCC,mBAAA;IAA3B,SAAO,EAAEC,MAAA,CAAAC;EAAK,qC,GAE3BV,mBAAA,CAGM,cAFJW,UAAkC,EAClCX,mBAAA,CAA4B,cAAAY,gBAAA,CAAnBH,MAAA,CAAAI,SAAS,iB,OAIxBb,mBAAA,CAWM,OAXNc,UAWM,GAVJd,mBAAA,CASM,OATNe,UASM,GARON,MAAA,CAAAO,WAAW,I,cAAtBC,YAAA,CAAoEC,cAAA;;IAA3CC,OAAO,EAAEV,MAAA,CAAAW,YAAY;IAAGC,IAAI,EAAEZ,MAAA,CAAAa;iEACvDC,mBAAA,CAMM,OANNC,UAMM,GALJjB,YAAA,CAIckB,qBAAA;IAHXC,OAAO,EAAEC,IAAA,CAAAD,OAAO;IAChBE,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAEF,IAAA,CAAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}