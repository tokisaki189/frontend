{"ast":null,"code":"import { onMounted, computed /* onUpdated */ } from \"vue\";\nimport api from \"../api\";\nimport { ref } from \"vue\";\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let user = ref(\"\");\n    let userId = ref();\n    let flightId = route.query.id;\n    let flightDetail = ref(\"\");\n    let normalQuantity = ref(0);\n    let businessQuantity = ref(0);\n    let normalPrice = ref(\"\");\n    let businessPrice = ref(\"\");\n    let plane = ref(\"\");\n    let departureCity = ref(\"\");\n    let arrivalCity = ref(\"\");\n    let departureDate = ref(\"\");\n    let departureTime = ref(\"\");\n    let arrivalTime = ref(\"\");\n    let arrivalDate = ref(\"\");\n    let normalSeat = ref(\"\");\n    let normalSeatPrice = ref(\"\");\n    let businessSeat = ref(\"\");\n    let businessSeatPrice = ref(\"\");\n    onMounted(() => {\n      // console.log(flightId);\n      api.get(\"/orderflight/\" + flightId, {}).then(response => {\n        flightDetail.value = response.data;\n        console.log(flightDetail.value);\n        plane.value = flightDetail.value[0].planes;\n        departureCity.value = flightDetail.value[0].departure_city;\n        arrivalCity.value = flightDetail.value[0].arrival_city;\n        normalPrice.value = flightDetail.value[0].normal_seat_price;\n        businessPrice.value = flightDetail.value[0].business_seat_price;\n        normalSeat.value = flightDetail.value[0].normal_seat;\n        businessSeat.value = flightDetail.value[0].business_seat;\n        console.log(businessSeat.value + \" \" + normalSeat.value);\n        // console.log(normalPrice.value + \" \" + businessPrice.value);\n      }).catch(error => {\n        console.error(error);\n      });\n      api.get(\"/check\", {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.isLogin === true) {\n          store.commit(\"login\");\n          isLogin.value = store.state.isLogin;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      const token = Cookies.get(\"token\");\n      if (token) {\n        user.value = jwtDecode(token);\n        userId.value = user.value.id;\n        console.log(userId.value);\n        api.get(\"/userprofile/\" + userId.value, {}).then(response => {\n          userInfo.value = response.data;\n          console.log(userInfo.value);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    });\n    function order() {\n      api.post(\"/order/\" + flightId, {\n        normalSeatOrder: normalQuantity.value,\n        businessSeatOrder: businessQuantity.value,\n        totalPaid: totalPrice.value\n      });\n      // .then((response) => {\n      //   // this.flightlist = response.data;\n      //   // console.log(this.flightlist);\n      // })\n      // .catch((error) => {\n      //   console.log(error);\n      // });\n    }\n\n    let totalPrice = computed(() => {\n      let result = normalQuantity.value * normalPrice.value + businessQuantity.value * businessPrice.value;\n      return isNaN(result) ? 0 : result;\n    });\n    // onUpdated(() => {\n    //   console.log(totalPrice.value);\n    // });\n    return {\n      flightId,\n      flightDetail,\n      totalPrice,\n      normalQuantity,\n      businessQuantity,\n      normalPrice,\n      businessPrice,\n      plane,\n      departureCity,\n      arrivalCity,\n      departureDate,\n      departureTime,\n      arrivalTime,\n      arrivalDate,\n      normalSeat,\n      normalSeatPrice,\n      businessSeat,\n      businessSeatPrice,\n      order\n    };\n  }\n};","map":{"version":3,"names":["onMounted","computed","api","ref","Cookies","jwtDecode","useRoute","setup","route","user","userId","flightId","query","id","flightDetail","normalQuantity","businessQuantity","normalPrice","businessPrice","plane","departureCity","arrivalCity","departureDate","departureTime","arrivalTime","arrivalDate","normalSeat","normalSeatPrice","businessSeat","businessSeatPrice","get","then","response","value","data","console","log","planes","departure_city","arrival_city","normal_seat_price","business_seat_price","normal_seat","business_seat","catch","error","withCredentials","isLogin","store","commit","state","token","userInfo","order","post","normalSeatOrder","businessSeatOrder","totalPaid","totalPrice","result","isNaN"],"sources":["/home/prism/Documents/flyticket/src/views/OrderView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div>here</div>\n    <!-- <div>{{ flightDetail[0] }}</div> -->\n    <div>Plane: {{ plane }}</div>\n    <div>From: {{ departureCity }}</div>\n    <div>To: {{ arrivalCity }}</div>\n    <div class=\"priceContainer\">\n      <label for=\"normal-seat\"> Normal </label>\n      <input\n        type=\"number\"\n        v-model=\"normalQuantity\"\n        min=\"0\"\n        :max=\"normalSeat\"\n        id=\"normal-seat\"\n      />\n      <p>Normal Seat x {{ normalQuantity }}</p>\n      <label for=\"business-seat\"> Business</label>\n      <input\n        type=\"number\"\n        v-model=\"businessQuantity\"\n        name=\"\"\n        id=\"business=seat\"\n        min=\"0\"\n        :max=\"businessSeat\"\n      />\n      <p>Business Seat x {{ businessQuantity }}</p>\n      <div class=\"totalPrice\">Total Price: {{ totalPrice }}$</div>\n    </div>\n    <button @click=\"order()\">Order a Ticket</button>\n  </div>\n</template>\n<script>\nimport { onMounted, computed /* onUpdated */ } from \"vue\";\nimport api from \"../api\";\nimport { ref } from \"vue\";\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let user = ref(\"\");\n    let userId = ref();\n    let flightId = route.query.id;\n    let flightDetail = ref(\"\");\n    let normalQuantity = ref(0);\n    let businessQuantity = ref(0);\n    let normalPrice = ref(\"\");\n    let businessPrice = ref(\"\");\n    let plane = ref(\"\");\n    let departureCity = ref(\"\");\n    let arrivalCity = ref(\"\");\n    let departureDate = ref(\"\");\n    let departureTime = ref(\"\");\n    let arrivalTime = ref(\"\");\n    let arrivalDate = ref(\"\");\n    let normalSeat = ref(\"\");\n    let normalSeatPrice = ref(\"\");\n    let businessSeat = ref(\"\");\n    let businessSeatPrice = ref(\"\");\n    onMounted(() => {\n      // console.log(flightId);\n      api\n        .get(\"/orderflight/\" + flightId, {})\n        .then((response) => {\n          flightDetail.value = response.data;\n          console.log(flightDetail.value);\n          plane.value = flightDetail.value[0].planes;\n          departureCity.value = flightDetail.value[0].departure_city;\n          arrivalCity.value = flightDetail.value[0].arrival_city;\n          normalPrice.value = flightDetail.value[0].normal_seat_price;\n          businessPrice.value = flightDetail.value[0].business_seat_price;\n          normalSeat.value = flightDetail.value[0].normal_seat;\n          businessSeat.value = flightDetail.value[0].business_seat;\n          console.log(businessSeat.value + \" \" + normalSeat.value);\n          // console.log(normalPrice.value + \" \" + businessPrice.value);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      api\n        .get(\"/check\", { withCredentials: true })\n        .then((response) => {\n          if (response.data.isLogin === true) {\n            store.commit(\"login\");\n            isLogin.value = store.state.isLogin;\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      const token = Cookies.get(\"token\");\n      if (token) {\n        user.value = jwtDecode(token);\n        userId.value = user.value.id;\n        console.log(userId.value);\n        api\n          .get(\"/userprofile/\" + userId.value, {})\n          .then((response) => {\n            userInfo.value = response.data;\n            console.log(userInfo.value);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    });\n    function order() {\n      api.post(\"/order/\" + flightId, {\n        normalSeatOrder: normalQuantity.value,\n        businessSeatOrder: businessQuantity.value,\n        totalPaid: totalPrice.value,\n      });\n      // .then((response) => {\n      //   // this.flightlist = response.data;\n      //   // console.log(this.flightlist);\n      // })\n      // .catch((error) => {\n      //   console.log(error);\n      // });\n    }\n    let totalPrice = computed(() => {\n      let result =\n        normalQuantity.value * normalPrice.value +\n        businessQuantity.value * businessPrice.value;\n      return isNaN(result) ? 0 : result;\n    });\n    // onUpdated(() => {\n    //   console.log(totalPrice.value);\n    // });\n    return {\n      flightId,\n      flightDetail,\n      totalPrice,\n      normalQuantity,\n      businessQuantity,\n      normalPrice,\n      businessPrice,\n      plane,\n      departureCity,\n      arrivalCity,\n      departureDate,\n      departureTime,\n      arrivalTime,\n      arrivalDate,\n      normalSeat,\n      normalSeatPrice,\n      businessSeat,\n      businessSeatPrice,\n      order,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  margin-top: 10rem;\n}\n.priceContainer {\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  margin: auto;\n  padding: auto;\n}\n.totalPrice {\n  color: red;\n  font-size: larger;\n}\ninput[type=\"number\"],\nselect {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}