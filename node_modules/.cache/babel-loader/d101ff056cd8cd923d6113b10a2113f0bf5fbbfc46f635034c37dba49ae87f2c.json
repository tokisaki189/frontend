{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport api from \"../api\";\nimport VueCookies from \"vue-cookie\";\nimport { useStore } from \"vuex\";\nimport router from \"../router\";\nexport default {\n  setup() {\n    let store = useStore();\n    let isLogin = ref(store.state.isLogin);\n    let username = ref(\"\");\n    let password = ref(\"\");\n    let notification = ref(\"\");\n    let token = ref(\"\");\n    function checkcookie() {\n      console.log(VueCookies.get(\"token\"));\n    }\n    function login() {\n      api.post(\"/api/login\", {\n        username: username.value,\n        password: password.value\n      }).then(response => {\n        this.notification = response.data.notification;\n        this.token = response.data.token;\n        this.isLogin = response.data.isLogin;\n        const expirationTime = 10; // in milliseconds\n        const now = new Date();\n\n        // Check if the cookie already exists and get the timestamp\n        const existingTimestamp = VueCookies.get(\"my-cookie-timestamp\");\n        const currentTimestamp = now.getTime();\n        if (existingTimestamp != null) {\n          // Calculate the elapsed time since the cookie was last set\n          const elapsedTime = currentTimestamp - existingTimestamp;\n          if (elapsedTime >= expirationTime) {\n            // The cookie has expired, remove it\n            VueCookies.remove(\"token\");\n            VueCookies.remove(\"my-cookie-timestamp\");\n          }\n        }\n        VueCookies.set(\"token\", this.token);\n        if (response.data.isLogin) {\n          router.push(\"/\");\n          setTimeout(() => {\n            router.go(0);\n          }, 500);\n        } else {\n          console.log(\"nothing\");\n        }\n        console.log(isLogin.value);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    return {\n      username,\n      password,\n      login,\n      notification,\n      token,\n      isLogin,\n      checkcookie\n    };\n  }\n};","map":{"version":3,"names":["ref","api","VueCookies","useStore","router","setup","store","isLogin","state","username","password","notification","token","checkcookie","console","log","get","login","post","value","then","response","data","expirationTime","now","Date","existingTimestamp","currentTimestamp","getTime","elapsedTime","remove","set","push","setTimeout","go","catch","error"],"sources":["/home/prism/Documents/flyticket/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <form class=\"login-form\">\n      <p>Register an account</p>\n      <input\n        type=\"text\"\n        name=\"\"\n        id=\"username\"\n        v-model=\"username\"\n        placeholder=\"Your username\"\n      />\n      <input\n        type=\"password\"\n        name=\"\"\n        id=\"password\"\n        v-model=\"password\"\n        placeholder=\"Your password\"\n        autoComplete=\"true\"\n      />\n      <button class=\"login-button\" @click=\"login\">Login</button>\n    </form>\n    <div>{{ notification }}</div>\n    <router-link to=\"/Register\"\n      >Don't have an account ? Register here\n    </router-link>\n    <button @click=\"checkcookie()\">check cookies</button>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport api from \"../api\";\nimport VueCookies from \"vue-cookie\";\nimport { useStore } from \"vuex\";\nimport router from \"../router\";\n\nexport default {\n  setup() {\n    let store = useStore();\n    let isLogin = ref(store.state.isLogin);\n    let username = ref(\"\");\n    let password = ref(\"\");\n    let notification = ref(\"\");\n    let token = ref(\"\");\n    function checkcookie() {\n      console.log(VueCookies.get(\"token\"));\n    }\n    function login() {\n      api\n        .post(\"/api/login\", {\n          username: username.value,\n          password: password.value,\n        })\n        .then((response) => {\n          this.notification = response.data.notification;\n          this.token = response.data.token;\n          this.isLogin = response.data.isLogin;\n          const expirationTime = 10; // in milliseconds\n          const now = new Date();\n\n          // Check if the cookie already exists and get the timestamp\n          const existingTimestamp = VueCookies.get(\"my-cookie-timestamp\");\n          const currentTimestamp = now.getTime();\n\n          if (existingTimestamp != null) {\n            // Calculate the elapsed time since the cookie was last set\n            const elapsedTime = currentTimestamp - existingTimestamp;\n\n            if (elapsedTime >= expirationTime) {\n              // The cookie has expired, remove it\n              VueCookies.remove(\"token\");\n              VueCookies.remove(\"my-cookie-timestamp\");\n            }\n          }\n          VueCookies.set(\"token\", this.token);\n          if (response.data.isLogin) {\n            router.push(\"/\");\n            setTimeout(() => {\n              router.go(0);\n            }, 500);\n          } else {\n            console.log(\"nothing\");\n          }\n          console.log(isLogin.value);\n        })\n\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    return {\n      username,\n      password,\n      login,\n      notification,\n      token,\n      isLogin,\n      checkcookie,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  width: 30rem;\n  background-color: ;\n}\n.login-form {\n  margin: auto;\n  padding: auto;\n  border-radius: 2rem;\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 2rem;\n  background-color: rgb(255, 255, 255);\n}\ntextarea:focus,\ninput:focus {\n  outline: none;\n}\n.login-form input {\n  height: 2rem;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n}\n.login-button {\n  width: 5rem;\n  height: 3rem;\n  border: none;\n  border-radius: 1rem;\n  background-color: aquamarine;\n}\n</style>\n"],"mappings":";AA8BA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,GAAE,MAAO,QAAQ;AACxB,OAAOC,UAAS,MAAO,YAAY;AACnC,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,MAAK,MAAO,WAAW;AAE9B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,IAAIC,KAAI,GAAIH,QAAQ,EAAE;IACtB,IAAII,OAAM,GAAIP,GAAG,CAACM,KAAK,CAACE,KAAK,CAACD,OAAO,CAAC;IACtC,IAAIE,QAAO,GAAIT,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIU,QAAO,GAAIV,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIW,YAAW,GAAIX,GAAG,CAAC,EAAE,CAAC;IAC1B,IAAIY,KAAI,GAAIZ,GAAG,CAAC,EAAE,CAAC;IACnB,SAASa,WAAWA,CAAA,EAAG;MACrBC,OAAO,CAACC,GAAG,CAACb,UAAU,CAACc,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC;IACA,SAASC,KAAKA,CAAA,EAAG;MACfhB,GAAE,CACCiB,IAAI,CAAC,YAAY,EAAE;QAClBT,QAAQ,EAAEA,QAAQ,CAACU,KAAK;QACxBT,QAAQ,EAAEA,QAAQ,CAACS;MACrB,CAAC,EACAC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACV,YAAW,GAAIU,QAAQ,CAACC,IAAI,CAACX,YAAY;QAC9C,IAAI,CAACC,KAAI,GAAIS,QAAQ,CAACC,IAAI,CAACV,KAAK;QAChC,IAAI,CAACL,OAAM,GAAIc,QAAQ,CAACC,IAAI,CAACf,OAAO;QACpC,MAAMgB,cAAa,GAAI,EAAE,EAAE;QAC3B,MAAMC,GAAE,GAAI,IAAIC,IAAI,EAAE;;QAEtB;QACA,MAAMC,iBAAgB,GAAIxB,UAAU,CAACc,GAAG,CAAC,qBAAqB,CAAC;QAC/D,MAAMW,gBAAe,GAAIH,GAAG,CAACI,OAAO,EAAE;QAEtC,IAAIF,iBAAgB,IAAK,IAAI,EAAE;UAC7B;UACA,MAAMG,WAAU,GAAIF,gBAAe,GAAID,iBAAiB;UAExD,IAAIG,WAAU,IAAKN,cAAc,EAAE;YACjC;YACArB,UAAU,CAAC4B,MAAM,CAAC,OAAO,CAAC;YAC1B5B,UAAU,CAAC4B,MAAM,CAAC,qBAAqB,CAAC;UAC1C;QACF;QACA5B,UAAU,CAAC6B,GAAG,CAAC,OAAO,EAAE,IAAI,CAACnB,KAAK,CAAC;QACnC,IAAIS,QAAQ,CAACC,IAAI,CAACf,OAAO,EAAE;UACzBH,MAAM,CAAC4B,IAAI,CAAC,GAAG,CAAC;UAChBC,UAAU,CAAC,MAAM;YACf7B,MAAM,CAAC8B,EAAE,CAAC,CAAC,CAAC;UACd,CAAC,EAAE,GAAG,CAAC;QACT,OAAO;UACLpB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACxB;QACAD,OAAO,CAACC,GAAG,CAACR,OAAO,CAACY,KAAK,CAAC;MAC5B,CAAC,EAEAgB,KAAK,CAAEC,KAAK,IAAK;QAChBtB,OAAO,CAACC,GAAG,CAACqB,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;IACA,OAAO;MACL3B,QAAQ;MACRC,QAAQ;MACRO,KAAK;MACLN,YAAY;MACZC,KAAK;MACLL,OAAO;MACPM;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}