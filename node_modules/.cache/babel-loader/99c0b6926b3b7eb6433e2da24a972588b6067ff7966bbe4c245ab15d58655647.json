{"ast":null,"code":"import { onMounted } from \"vue\";\nimport api from \"../api\";\nimport { ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let flightId = route.query.id;\n    let flightDetail = ref(\"\");\n    let normalQuantity = ref();\n    let businessQuantity = ref();\n    // let totalPrice = computed(() => {\n    //   return (\n    //     normalQuantity.value * flightDetail.value[0].normal_seat_price +\n    //     businessQuantity.value * flightDetail.value[0].business_seat_price\n    //   );\n    // });\n    onMounted(() => {\n      console.log(flightId);\n      api.get(\"/orderflight/\" + flightId, {}).then(response => {\n        flightDetail.value = response.data;\n        console.log(flightDetail.value[0].planes);\n      }).catch(error => {\n        console.error(error);\n      });\n    });\n    return {\n      flightId,\n      flightDetail,\n      // totalPrice,\n      normalQuantity,\n      businessQuantity\n    };\n  }\n};","map":{"version":3,"names":["onMounted","api","ref","useRoute","setup","route","flightId","query","id","flightDetail","normalQuantity","businessQuantity","console","log","get","then","response","value","data","planes","catch","error"],"sources":["/home/prism/Documents/flyticket/src/views/OrderView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div>here</div>\n    <!-- <div>{{ flightDetail[0] }}</div> -->\n    <label for=\"normal-seat\"> Normal </label>\n    <input type=\"number\" v-model=\"normalQuantity\" id=\"normal-seat\" />\n    <label for=\"business-seat\"> Business</label>\n    <input\n      type=\"number\"\n      v-model=\"businessQuantity\"\n      name=\"\"\n      id=\"business=seat\"\n    />\n    <div>Price: {{ totalPrice }}</div>\n    <button>Order</button>\n  </div>\n</template>\n<script>\nimport { onMounted } from \"vue\";\nimport api from \"../api\";\nimport { ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nexport default {\n  setup() {\n    const route = useRoute();\n    let flightId = route.query.id;\n    let flightDetail = ref(\"\");\n    let normalQuantity = ref();\n    let businessQuantity = ref();\n    // let totalPrice = computed(() => {\n    //   return (\n    //     normalQuantity.value * flightDetail.value[0].normal_seat_price +\n    //     businessQuantity.value * flightDetail.value[0].business_seat_price\n    //   );\n    // });\n    onMounted(() => {\n      console.log(flightId);\n      api\n        .get(\"/orderflight/\" + flightId, {})\n        .then((response) => {\n          flightDetail.value = response.data;\n          console.log(flightDetail.value[0].planes);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    return {\n      flightId,\n      flightDetail,\n      // totalPrice,\n      normalQuantity,\n      businessQuantity,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  margin-top: 10rem;\n}\n</style>\n"],"mappings":"AAkBA,SAASA,SAAQ,QAAS,KAAK;AAC/B,OAAOC,GAAE,MAAO,QAAQ;AACxB,SAASC,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIF,QAAQ,EAAE;IACxB,IAAIG,QAAO,GAAID,KAAK,CAACE,KAAK,CAACC,EAAE;IAC7B,IAAIC,YAAW,GAAIP,GAAG,CAAC,EAAE,CAAC;IAC1B,IAAIQ,cAAa,GAAIR,GAAG,EAAE;IAC1B,IAAIS,gBAAe,GAAIT,GAAG,EAAE;IAC5B;IACA;IACA;IACA;IACA;IACA;IACAF,SAAS,CAAC,MAAM;MACdY,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;MACrBL,GAAE,CACCa,GAAG,CAAC,eAAc,GAAIR,QAAQ,EAAE,CAAC,CAAC,EAClCS,IAAI,CAAEC,QAAQ,IAAK;QAClBP,YAAY,CAACQ,KAAI,GAAID,QAAQ,CAACE,IAAI;QAClCN,OAAO,CAACC,GAAG,CAACJ,YAAY,CAACQ,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;MAC3C,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO;MACLf,QAAQ;MACRG,YAAY;MACZ;MACAC,cAAc;MACdC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}