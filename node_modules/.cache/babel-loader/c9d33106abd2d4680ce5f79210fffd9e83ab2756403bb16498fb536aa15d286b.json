{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c6101e4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"login-form\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Login\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"link-wrap\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    placeholder: \"Your username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    name: \"\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    placeholder: \"Your password\",\n    autoComplete: \"true\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _createElementVNode(\"button\", {\n    class: \"login-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.login && $setup.login(...args))\n  }, \"Login\")]), _createElementVNode(\"div\", null, _toDisplayString($setup.notification), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_router_link, {\n    to: \"/Register\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Don't have an account ? Register here \")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/forget\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Forgot password \")]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","name","id","$setup","username","$event","placeholder","password","autoComplete","onClick","_cache","args","login","_toDisplayString","notification","_hoisted_4","_createVNode","_component_router_link","to"],"sources":["/home/prism/Documents/flyticket/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <form class=\"login-form\">\n      <p>Login</p>\n      <input\n        type=\"text\"\n        name=\"\"\n        id=\"username\"\n        v-model=\"username\"\n        placeholder=\"Your username\"\n      />\n      <input\n        type=\"password\"\n        name=\"\"\n        id=\"password\"\n        v-model=\"password\"\n        placeholder=\"Your password\"\n        autoComplete=\"true\"\n      />\n      <button class=\"login-button\" @click=\"login\">Login</button>\n    </form>\n    <div>{{ notification }}</div>\n    <div class=\"link-wrap\">\n      <router-link to=\"/Register\"\n        >Don't have an account ? Register here\n      </router-link>\n      <router-link to=\"/forget\"> Forgot password </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport api from \"../api\";\nimport VueCookies from \"vue-cookie\";\nimport { useStore } from \"vuex\";\nimport router from \"../router\";\n\nexport default {\n  setup() {\n    let store = useStore();\n    let isLogin = ref(store.state.isLogin);\n    let username = ref(\"\");\n    let password = ref(\"\");\n    let notification = ref(\"\");\n    let token = ref(\"\");\n    function checkcookie() {\n      console.log(VueCookies.get(\"token\"));\n    }\n    function login() {\n      api\n        .post(\"/api/login\", {\n          username: username.value,\n          password: password.value,\n        })\n        .then((response) => {\n          this.notification = response.data.notification;\n          this.token = response.data.token;\n          this.isLogin = response.data.isLogin;\n          // const expirationTime = 10; // in milliseconds\n          // const now = new Date();\n\n          // // Check if the cookie already exists and get the timestamp\n          // const existingTimestamp = VueCookies.get(\"my-cookie-timestamp\");\n          // const currentTimestamp = now.getTime();\n\n          // if (existingTimestamp != null) {\n          //   // Calculate the elapsed time since the cookie was last set\n          //   const elapsedTime = currentTimestamp - existingTimestamp;\n\n          //   if (elapsedTime >= expirationTime) {\n          //     // The cookie has expired, remove it\n          //     VueCookies.remove(\"token\");\n          //     VueCookies.remove(\"my-cookie-timestamp\");\n          //   }\n          // }\n          VueCookies.set(\"token\", this.token);\n          if (response.data.isLogin) {\n            router.push(\"/\");\n            setTimeout(() => {\n              router.go(0);\n            }, 500);\n          } else {\n            console.log(\"nothing\");\n          }\n          console.log(isLogin.value);\n        })\n\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    return {\n      username,\n      password,\n      login,\n      notification,\n      token,\n      isLogin,\n      checkcookie,\n    };\n  },\n};\n</script>\n<style scoped>\nbody {\n}\n.container {\n  width: 30rem;\n  background-color: white;\n  border: 1px black solid;\n  margin: auto;\n  padding: auto;\n  margin-top: 5rem;\n  border-radius: 1rem;\n  padding-bottom: 3rem;\n}\n.login-form {\n  margin: auto;\n  padding: auto;\n  border-radius: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 2rem;\n  background-color: rgb(255, 255, 255);\n}\ntextarea:focus,\ninput:focus {\n  outline: none;\n}\n.login-form input {\n  height: 2rem;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n}\n.login-button {\n  width: 5rem;\n  height: 3rem;\n  border: none;\n  border-radius: 0.5rem;\n  background-color: aquamarine;\n}\n.link-wrap {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACdA,KAAK,EAAC;AAAY;gEACtBC,mBAAA,CAAY,WAAT,OAAK;;EAmBLD,KAAK,EAAC;AAAW;;;uBArBxBE,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJF,mBAAA,CAkBO,QAlBPG,UAkBO,GAjBLC,UAAY,E,gBACZJ,mBAAA,CAME;IALAK,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,EAAE;IACPC,EAAE,EAAC,UAAU;+DACJC,MAAA,CAAAC,QAAQ,GAAAC,MAAA;IACjBC,WAAW,EAAC;iDADHH,MAAA,CAAAC,QAAQ,E,mBAGnBT,mBAAA,CAOE;IANAK,IAAI,EAAC,UAAU;IACfC,IAAI,EAAC,EAAE;IACPC,EAAE,EAAC,UAAU;+DACJC,MAAA,CAAAI,QAAQ,GAAAF,MAAA;IACjBC,WAAW,EAAC,eAAe;IAC3BE,YAAY,EAAC;iDAFJL,MAAA,CAAAI,QAAQ,E,GAInBZ,mBAAA,CAA0D;IAAlDD,KAAK,EAAC,cAAc;IAAEe,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,MAAA,CAAAS,KAAA,IAAAT,MAAA,CAAAS,KAAA,IAAAD,IAAA,CAAK;KAAE,OAAK,E,GAEnDhB,mBAAA,CAA6B,aAAAkB,gBAAA,CAArBV,MAAA,CAAAW,YAAY,kBACpBnB,mBAAA,CAKM,OALNoB,UAKM,GAJJC,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAW;sBACxB,MACH,C,iBADG,wCACH,E;;MACAF,YAAA,CAAyDC,sBAAA;IAA5CC,EAAE,EAAC;EAAS;sBAAC,MAAiB,C,iBAAjB,mBAAiB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}