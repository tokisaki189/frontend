{"ast":null,"code":"import { onMounted, ref } from \"vue\";\nimport api from \"../../api\";\nexport default {\n  name: \"UserAccount\",\n  setup() {\n    let users = ref([]);\n    let role = ref(\"user\");\n    onMounted(() => {\n      api.get(\"/alluser\").then(response => {\n        users.value = response.data;\n        console.log(users.value);\n      }).catch(error => {\n        console.error(error);\n      });\n    });\n    function addAccount() {\n      console.log(newFirstName.value + \"and\" + newLastName.value + \"and\" + newUserName.value + \"and\" + role.value);\n      api.post(\"/api/register\", {\n        username: newUserName.value,\n        firstname: newFirstName.value,\n        lastname: newLastName.value,\n        password: newPassword.value,\n        email: newEmail.value\n      }).then(response => {\n        console.log(response.data);\n        this.message = response.data.message;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    return {\n      users,\n      role,\n      newEmail,\n      newUserName,\n      newPassword,\n      newFirstName,\n      newLastName\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","api","name","setup","users","role","get","then","response","value","data","console","log","catch","error","addAccount","newFirstName","newLastName","newUserName","post","username","firstname","lastname","password","newPassword","email","newEmail","message"],"sources":["/home/prism/Documents/App/deploy/frontend/src/components/Admin/UserAccount.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <form class=\"register-form\">\n      <p>Add a new</p>\n      <input\n        type=\"text\"\n        name=\"\"\n        id=\"fname\"\n        placeholder=\"Your first name\"\n        v-model=\"newFirstName\"\n      />\n      <input\n        type=\"text\"\n        name=\"\"\n        id=\"lname\"\n        placeholder=\"Your last name\"\n        v-model=\"newLastName\"\n      />\n      <input\n        type=\"text\"\n        name=\"\"\n        id=\"uname\"\n        placeholder=\"Your username\"\n        v-model=\"newUserName\"\n      />\n      <input\n        type=\"email\"\n        name=\"\"\n        id=\"email\"\n        placeholder=\"Your email\"\n        v-model=\"newEmail\"\n      />\n      <input\n        type=\"password\"\n        name=\"pass\"\n        id=\"\"\n        placeholder=\"Your password\"\n        v-model=\"newPassword\"\n        autocomplete=\"on\"\n      />\n      <label for=\"role\"> Role</label>\n      <select name=\"\" id=\"role\" v-model=\"role\" required>\n        <option value=\"admin\">Admin</option>\n        <option value=\"user\">User</option>\n      </select>\n      <button class=\"register-button\" @click.prevent=\"addAccount()\">\n        Add Account\n      </button>\n    </form>\n    <div>\n      <table border=\"1\" class=\"user-table\">\n        <tr>\n          <th>ID</th>\n          <th>Username</th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Password</th>\n          <th>Operation</th>\n        </tr>\n        <tr v-for=\"user in users\" :key=\"user\">\n          <td>{{ user.id }}</td>\n          <td>{{ user.username }}</td>\n          <td>{{ user.first_name }}</td>\n          <td>{{ user.last_name }}</td>\n          <td>{{ user.email }}</td>\n          <td>{{ user.password }}</td>\n          <td>\n            <button>Delete the account</button> <button>Set Admin</button>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</template>\n<script>\nimport { onMounted, ref } from \"vue\";\nimport api from \"../../api\";\nexport default {\n  name: \"UserAccount\",\n  setup() {\n    let users = ref([]);\n    let role = ref(\"user\");\n    onMounted(() => {\n      api\n        .get(\"/alluser\")\n        .then((response) => {\n          users.value = response.data;\n          console.log(users.value);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    function addAccount() {\n      console.log(\n        newFirstName.value +\n          \"and\" +\n          newLastName.value +\n          \"and\" +\n          newUserName.value +\n          \"and\" +\n          role.value\n      );\n      api\n        .post(\"/api/register\", {\n          username: newUserName.value,\n          firstname: newFirstName.value,\n          lastname: newLastName.value,\n          password: newPassword.value,\n          email: newEmail.value,\n        })\n        .then((response) => {\n          console.log(response.data);\n          this.message = response.data.message;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n    return {\n      users,\n      role,\n      newEmail,\n      newUserName,\n      newPassword,\n      newFirstName,\n      newLastName,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n}\n.register-form {\n  margin: auto;\n  padding: auto;\n  border-radius: 2rem;\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  background-color: rgb(255, 255, 255);\n}\ntextarea:focus,\ninput:focus {\n  outline: none;\n}\n.register-form input {\n  height: 2rem;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n}\n/* .register-button {\n  appearance: button;\n  background-color: #1899d6;\n  border: solid transparent;\n  border-radius: 16px;\n  border-width: 0 0 4px;\n  box-sizing: border-box;\n  color: #ffffff;\n  cursor: pointer;\n  display: inline-block;\n  font-family: din-round, sans-serif;\n  font-size: 15px;\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  line-height: 20px;\n  margin: 0;\n  outline: none;\n  overflow: visible;\n  padding: 13px 16px;\n  text-align: center;\n  text-transform: uppercase;\n  touch-action: manipulation;\n  transform: translateZ(0);\n  transition: filter 0.2s;\n  user-select: none;\n  -webkit-user-select: none;\n  vertical-align: middle;\n  white-space: nowrap;\n  width: 15rem;\n}\n\nbutton:after {\n  background-clip: padding-box;\n  background-color: #1cb0f6;\n  border: solid transparent;\n  border-radius: 16px;\n  border-width: 0 0 4px;\n  bottom: -4px;\n  content: \"\";\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: -1;\n}\n\nbutton:main,\n.button-19:focus {\n  user-select: auto;\n}\n\nbutton:hover:not(:disabled) {\n  filter: brightness(1.1);\n  -webkit-filter: brightness(1.1);\n}\n\nbutton:disabled {\n  cursor: auto;\n} */\n.errorBox {\n  color: red;\n  width: 22rem;\n  margin: auto;\n  padding: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n}\n.user-table {\n  width: 100%;\n}\n</style>\n"],"mappings":"AA4EA,SAASA,SAAS,EAAEC,GAAE,QAAS,KAAK;AACpC,OAAOC,GAAE,MAAO,WAAW;AAC3B,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,IAAIC,KAAI,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACnB,IAAIK,IAAG,GAAIL,GAAG,CAAC,MAAM,CAAC;IACtBD,SAAS,CAAC,MAAM;MACdE,GAAE,CACCK,GAAG,CAAC,UAAU,EACdC,IAAI,CAAEC,QAAQ,IAAK;QAClBJ,KAAK,CAACK,KAAI,GAAID,QAAQ,CAACE,IAAI;QAC3BC,OAAO,CAACC,GAAG,CAACR,KAAK,CAACK,KAAK,CAAC;MAC1B,CAAC,EACAI,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,CAAC;IACF,SAASC,UAAUA,CAAA,EAAG;MACpBJ,OAAO,CAACC,GAAG,CACTI,YAAY,CAACP,KAAI,GACf,KAAI,GACJQ,WAAW,CAACR,KAAI,GAChB,KAAI,GACJS,WAAW,CAACT,KAAI,GAChB,KAAI,GACJJ,IAAI,CAACI,KAAI,CACZ;MACDR,GAAE,CACCkB,IAAI,CAAC,eAAe,EAAE;QACrBC,QAAQ,EAAEF,WAAW,CAACT,KAAK;QAC3BY,SAAS,EAAEL,YAAY,CAACP,KAAK;QAC7Ba,QAAQ,EAAEL,WAAW,CAACR,KAAK;QAC3Bc,QAAQ,EAAEC,WAAW,CAACf,KAAK;QAC3BgB,KAAK,EAAEC,QAAQ,CAACjB;MAClB,CAAC,EACAF,IAAI,CAAEC,QAAQ,IAAK;QAClBG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;QAC1B,IAAI,CAACiB,OAAM,GAAInB,QAAQ,CAACE,IAAI,CAACiB,OAAO;MACtC,CAAC,EACAd,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;IAEA,OAAO;MACLV,KAAK;MACLC,IAAI;MACJqB,QAAQ;MACRR,WAAW;MACXM,WAAW;MACXR,YAAY;MACZC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}