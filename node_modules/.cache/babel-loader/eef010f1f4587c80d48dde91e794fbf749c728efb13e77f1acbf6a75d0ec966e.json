{"ast":null,"code":"import { onMounted } from \"vue\";\n// import api from \"../api\";\nimport { ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let flightId = ref(route.query.id);\n    onMounted(() => {\n      console.log(\"Adln\");\n      //   api\n      //     .get(\"/orderflight\" + flightId.value)\n      //     .then((response) => {\n      //       flights.value = response.data;\n      //       console.log(flights.value);\n      //     })\n      //     .catch((error) => {\n      //       console.error(error);\n      //     });\n    });\n\n    return {\n      flightId\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","useRoute","setup","route","flightId","query","id","console","log"],"sources":["/home/prism/Documents/flyticket/src/views/OrderView.vue"],"sourcesContent":["<template>\n  <div>order here</div>\n  <p>The ID value is: {{ $route.query.id }}</p>\n</template>\n<script>\nimport { onMounted } from \"vue\";\n// import api from \"../api\";\nimport { ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nexport default {\n  setup() {\n    const route = useRoute();\n    let flightId = ref(route.query.id);\n    onMounted(() => {\n      console.log(\"Adln\");\n      //   api\n      //     .get(\"/orderflight\" + flightId.value)\n      //     .then((response) => {\n      //       flights.value = response.data;\n      //       console.log(flights.value);\n      //     })\n      //     .catch((error) => {\n      //       console.error(error);\n      //     });\n    });\n    return {\n      flightId,\n    };\n  },\n};\n</script>\n<style></style>\n"],"mappings":"AAKA,SAASA,SAAQ,QAAS,KAAK;AAC/B;AACA,SAASC,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIF,QAAQ,EAAE;IACxB,IAAIG,QAAO,GAAIJ,GAAG,CAACG,KAAK,CAACE,KAAK,CAACC,EAAE,CAAC;IAClCP,SAAS,CAAC,MAAM;MACdQ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC;;IACF,OAAO;MACLJ;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}