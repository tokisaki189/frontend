{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-003ce4c9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"here\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"normal-seat\"\n}, \" Normal \", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"business-seat\"\n}, \" Business\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"Order\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" <div>{{ flightDetail[0] }}</div> \"), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.normalQuantity = $event),\n    id: \"normal-seat\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.normalQuantity]]), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.businessQuantity = $event),\n    name: \"\",\n    id: \"business=seat\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.businessQuantity]]), _createElementVNode(\"div\", null, \"Price: \" + _toDisplayString($setup.totalPrice), 1 /* TEXT */), _hoisted_5]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","type","$setup","normalQuantity","$event","id","_hoisted_4","businessQuantity","name","_toDisplayString","totalPrice","_hoisted_5"],"sources":["/home/prism/Documents/flyticket/src/views/OrderView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div>here</div>\n    <!-- <div>{{ flightDetail[0] }}</div> -->\n    <label for=\"normal-seat\"> Normal </label>\n    <input type=\"number\" v-model=\"normalQuantity\" id=\"normal-seat\" />\n    <label for=\"business-seat\"> Business</label>\n    <input\n      type=\"number\"\n      v-model=\"businessQuantity\"\n      name=\"\"\n      id=\"business=seat\"\n    />\n    <div>Price: {{ totalPrice }}</div>\n    <button>Order</button>\n  </div>\n</template>\n<script>\nimport { onMounted, computed, onUpdated } from \"vue\";\nimport api from \"../api\";\nimport { ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let flightId = route.query.id;\n    let flightDetail = ref(\"\");\n    let normalQuantity = ref();\n    let businessQuantity = ref();\n    let totalPrice = computed(() => {\n      return normalQuantity.value + businessQuantity.value;\n    });\n    // let totalPrice = computed(() => {\n    //   return (\n    //     normalQuantity.value * flightDetail.value[0].normal_seat_price +\n    //     businessQuantity.value * flightDetail.value[0].business_seat_price\n    //   );\n    // });\n    onMounted(() => {\n      console.log(flightId);\n      api\n        .get(\"/orderflight/\" + flightId, {})\n        .then((response) => {\n          flightDetail.value = response.data;\n          let normalPrice = flightDetail.value[0].normal_seat_price;\n          let businessPrice = flightDetail.value[0].business_seat_price;\n          console.log(normalPrice + \" \" + businessPrice);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    onUpdated(() => {\n      console.log(totalPrice.value);\n    });\n    return {\n      flightId,\n      flightDetail,\n      totalPrice,\n      normalQuantity,\n      businessQuantity,\n      normalPrice,\n      businessPrice,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  margin-top: 10rem;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAAe,aAAV,MAAI;gEAETA,mBAAA,CAAyC;EAAlCC,GAAG,EAAC;AAAa,GAAC,UAAQ;gEAEjCD,mBAAA,CAA4C;EAArCC,GAAG,EAAC;AAAe,GAAC,WAAS;gEAQpCD,mBAAA,CAAsB,gBAAd,OAAK;;;uBAbfE,mBAAA,CAcM,OAdNC,UAcM,GAbJC,UAAe,EACfC,mBAAA,sCAAyC,EACzCC,UAAyC,E,gBACzCN,mBAAA,CAAiE;IAA1DO,IAAI,EAAC,QAAQ;+DAAUC,MAAA,CAAAC,cAAc,GAAAC,MAAA;IAAEC,EAAE,EAAC;iDAAnBH,MAAA,CAAAC,cAAc,E,GAC5CG,UAA4C,E,gBAC5CZ,mBAAA,CAKE;IAJAO,IAAI,EAAC,QAAQ;+DACJC,MAAA,CAAAK,gBAAgB,GAAAH,MAAA;IACzBI,IAAI,EAAC,EAAE;IACPH,EAAE,EAAC;iDAFMH,MAAA,CAAAK,gBAAgB,E,GAI3Bb,mBAAA,CAAkC,aAA7B,SAAO,GAAAe,gBAAA,CAAGP,MAAA,CAAAQ,UAAU,kBACzBC,UAAsB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}