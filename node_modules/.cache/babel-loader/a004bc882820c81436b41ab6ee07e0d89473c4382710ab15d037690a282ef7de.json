{"ast":null,"code":"import { onMounted, computed /* onUpdated */ } from \"vue\";\nimport api from \"../api\";\nimport { useRoute } from \"vue-router\";\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\n// import Cookies from \"js-cookie\";\n// import jwtDecode from \"jwt-decode\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let store = useStore();\n    let isLogin = ref();\n    let flightId = route.query.id;\n    let flightDetail = ref(\"\");\n    let normalQuantity = ref(0);\n    let businessQuantity = ref(0);\n    let normalPrice = ref(\"\");\n    let businessPrice = ref(\"\");\n    let plane = ref(\"\");\n    let departureCity = ref(\"\");\n    let arrivalCity = ref(\"\");\n    let departureDate = ref(\"\");\n    let departureTime = ref(\"\");\n    let arrivalTime = ref(\"\");\n    let arrivalDate = ref(\"\");\n    let normalSeat = ref(\"\");\n    let normalSeatPrice = ref(\"\");\n    let businessSeat = ref(\"\");\n    let businessSeatPrice = ref(\"\");\n    // let user = ref(\"\");\n    let userId = ref();\n    // let userInfo = ref(\"\");\n    let message = ref(\"\");\n    onMounted(() => {\n      // console.log(flightId);\n      userId.value = store.state.userID;\n      api.get(\"/orderflight/\" + flightId, {}).then(response => {\n        flightDetail.value = response.data;\n        plane.value = flightDetail.value[0].planes;\n        departureCity.value = flightDetail.value[0].departure_city;\n        departureDate.value = flightDetail.value[0].departure_date;\n        arrivalDate.value = flightDetail.value[0].arrival_date;\n        departureTime.value = flightDetail.value[0].departure_time;\n        arrivalTime.value = flightDetail.value[0].arrival_time;\n        arrivalCity.value = flightDetail.value[0].arrival_city;\n        normalPrice.value = flightDetail.value[0].normal_seat_price;\n        businessPrice.value = flightDetail.value[0].business_seat_price;\n        normalSeat.value = flightDetail.value[0].normal_seat;\n        businessSeat.value = flightDetail.value[0].business_seat;\n      }).catch(error => {\n        console.error(error);\n      });\n      //   const token = Cookies.get(\"token\");\n      //   if (token) {\n      //     user.value = jwtDecode(token);\n      //     userId.value = user.value.id;\n      //     console.log(userId.value);\n      //     api\n      //       .get(\"/userprofile/\" + userId.value, {})\n      //       .then((response) => {\n      //         userInfo.value = response.data;\n      //         console.log(userInfo.value);\n      //       })\n      //       .catch((error) => {\n      //         console.log(error);\n      //       });\n      //   }\n    });\n\n    function order() {\n      api.post(\"/order/\" + flightId, {\n        userId: userId.value,\n        normalSeatOrder: normalQuantity.value,\n        businessSeatOrder: businessQuantity.value,\n        totalPaid: totalPrice.value\n      }).then(response => {\n        message.value = response.data.message;\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    console.log(normalPrice);\n    let totalPrice = computed(() => {\n      let result = normalQuantity.value * normalPrice.value + businessQuantity.value * businessPrice.value;\n      return isNaN(result) ? 0 : result;\n    });\n    function formatDate(date) {\n      let dateObj = new Date(date);\n      const year = dateObj.getFullYear();\n      const month = dateObj.getMonth() + 1;\n      const day = dateObj.getDate();\n      return `${day}-${month}-${year}`;\n    }\n    // onUpdated(() => {\n    //   console.log(totalPrice.value);\n    // });\n    return {\n      flightId,\n      flightDetail,\n      totalPrice,\n      normalQuantity,\n      businessQuantity,\n      normalPrice,\n      businessPrice,\n      plane,\n      departureCity,\n      arrivalCity,\n      departureDate,\n      departureTime,\n      arrivalTime,\n      arrivalDate,\n      normalSeat,\n      normalSeatPrice,\n      businessSeat,\n      businessSeatPrice,\n      order,\n      formatDate,\n      message,\n      isLogin\n    };\n  }\n};","map":{"version":3,"names":["onMounted","computed","api","useRoute","ref","useStore","setup","route","store","isLogin","flightId","query","id","flightDetail","normalQuantity","businessQuantity","normalPrice","businessPrice","plane","departureCity","arrivalCity","departureDate","departureTime","arrivalTime","arrivalDate","normalSeat","normalSeatPrice","businessSeat","businessSeatPrice","userId","message","value","state","userID","get","then","response","data","planes","departure_city","departure_date","arrival_date","departure_time","arrival_time","arrival_city","normal_seat_price","business_seat_price","normal_seat","business_seat","catch","error","console","order","post","normalSeatOrder","businessSeatOrder","totalPaid","totalPrice","log","result","isNaN","formatDate","date","dateObj","Date","year","getFullYear","month","getMonth","day","getDate"],"sources":["/home/prism/Documents/flyticket/src/views/OrderView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <p>Plane: {{ plane }}</p>\n    <p>From: {{ departureCity }}</p>\n    <p>To: {{ arrivalCity }}</p>\n    <p>\n      Departure Time: {{ formatDate(departureDate) }} at {{ departureTime }}\n    </p>\n    <p>Arrival Time: {{ formatDate(arrivalDate) }} at {{ arrivalTime }}</p>\n    <div class=\"priceContainer\">\n      <label for=\"normal-seat\"> Normal </label>\n      <input\n        type=\"number\"\n        v-model=\"normalQuantity\"\n        min=\"0\"\n        :max=\"normalSeat\"\n        id=\"normal-seat\"\n      />\n      <p>Normal Seat x {{ normalQuantity }}</p>\n      <label for=\"business-seat\"> Business</label>\n      <input\n        type=\"number\"\n        v-model=\"businessQuantity\"\n        name=\"\"\n        id=\"business=seat\"\n        min=\"0\"\n        :max=\"businessSeat\"\n      />\n      <p>Business Seat x {{ businessQuantity }}</p>\n      <div class=\"totalPrice\">Total Price: {{ totalPrice }}$</div>\n    </div>\n    <button @click=\"order()\">Order a Ticket</button>\n  </div>\n  <p>{{ message }}</p>\n</template>\n<script>\nimport { onMounted, computed /* onUpdated */ } from \"vue\";\nimport api from \"../api\";\nimport { useRoute } from \"vue-router\";\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\n// import Cookies from \"js-cookie\";\n// import jwtDecode from \"jwt-decode\";\nexport default {\n  setup() {\n    const route = useRoute();\n    let store = useStore();\n    let isLogin = ref();\n    let flightId = route.query.id;\n    let flightDetail = ref(\"\");\n    let normalQuantity = ref(0);\n    let businessQuantity = ref(0);\n    let normalPrice = ref(\"\");\n    let businessPrice = ref(\"\");\n    let plane = ref(\"\");\n    let departureCity = ref(\"\");\n    let arrivalCity = ref(\"\");\n    let departureDate = ref(\"\");\n    let departureTime = ref(\"\");\n    let arrivalTime = ref(\"\");\n    let arrivalDate = ref(\"\");\n    let normalSeat = ref(\"\");\n    let normalSeatPrice = ref(\"\");\n    let businessSeat = ref(\"\");\n    let businessSeatPrice = ref(\"\");\n    // let user = ref(\"\");\n    let userId = ref();\n    // let userInfo = ref(\"\");\n    let message = ref(\"\");\n\n    onMounted(() => {\n      // console.log(flightId);\n      userId.value = store.state.userID;\n\n      api\n        .get(\"/orderflight/\" + flightId, {})\n        .then((response) => {\n          flightDetail.value = response.data;\n          plane.value = flightDetail.value[0].planes;\n          departureCity.value = flightDetail.value[0].departure_city;\n          departureDate.value = flightDetail.value[0].departure_date;\n          arrivalDate.value = flightDetail.value[0].arrival_date;\n          departureTime.value = flightDetail.value[0].departure_time;\n          arrivalTime.value = flightDetail.value[0].arrival_time;\n          arrivalCity.value = flightDetail.value[0].arrival_city;\n          normalPrice.value = flightDetail.value[0].normal_seat_price;\n          businessPrice.value = flightDetail.value[0].business_seat_price;\n          normalSeat.value = flightDetail.value[0].normal_seat;\n          businessSeat.value = flightDetail.value[0].business_seat;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      //   const token = Cookies.get(\"token\");\n      //   if (token) {\n      //     user.value = jwtDecode(token);\n      //     userId.value = user.value.id;\n      //     console.log(userId.value);\n      //     api\n      //       .get(\"/userprofile/\" + userId.value, {})\n      //       .then((response) => {\n      //         userInfo.value = response.data;\n      //         console.log(userInfo.value);\n      //       })\n      //       .catch((error) => {\n      //         console.log(error);\n      //       });\n      //   }\n    });\n    function order() {\n      api\n        .post(\"/order/\" + flightId, {\n          userId: userId.value,\n          normalSeatOrder: normalQuantity.value,\n          businessSeatOrder: businessQuantity.value,\n          totalPaid: totalPrice.value,\n        })\n        .then((response) => {\n          message.value = response.data.message;\n          console.log(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    console.log(normalPrice);\n    let totalPrice = computed(() => {\n      let result =\n        normalQuantity.value * normalPrice.value +\n        businessQuantity.value * businessPrice.value;\n      return isNaN(result) ? 0 : result;\n    });\n    function formatDate(date) {\n      let dateObj = new Date(date);\n      const year = dateObj.getFullYear();\n      const month = dateObj.getMonth() + 1;\n      const day = dateObj.getDate();\n      return `${day}-${month}-${year}`;\n    }\n    // onUpdated(() => {\n    //   console.log(totalPrice.value);\n    // });\n    return {\n      flightId,\n      flightDetail,\n      totalPrice,\n      normalQuantity,\n      businessQuantity,\n      normalPrice,\n      businessPrice,\n      plane,\n      departureCity,\n      arrivalCity,\n      departureDate,\n      departureTime,\n      arrivalTime,\n      arrivalDate,\n      normalSeat,\n      normalSeatPrice,\n      businessSeat,\n      businessSeatPrice,\n      order,\n      formatDate,\n      message,\n      isLogin,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  margin-top: 10rem;\n}\n.priceContainer {\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  margin: auto;\n  padding: auto;\n}\n.totalPrice {\n  color: red;\n  font-size: larger;\n}\ninput[type=\"number\"],\nselect {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\np {\n  font-size: large;\n  color: rgb(0, 165, 110);\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}