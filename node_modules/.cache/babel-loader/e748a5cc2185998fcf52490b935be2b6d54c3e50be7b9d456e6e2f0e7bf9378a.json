{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport api from \"../../api\";\nimport { Bar } from \"vue-chartjs\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  name: \"DashBoard\",\n  components: {\n    Bar\n  },\n  setup() {\n    let dateData = ref([]);\n    let today = ref(\"\");\n    let chartOptions = {\n      responsive: true\n    };\n    onMounted(() => {\n      api.get(\"/statistic/today\").then(response => {\n        today.value = response.data.result;\n      }).catch(error => {\n        console.error(error);\n      });\n      api.get(\"/statistic/total\").then(response => {\n        dateData.value = response.data;\n        const maxDay = Math.max(...dateData.value.map(item => item.day));\n        const sumArray = Array.from({\n          length: maxDay\n        }, () => 0);\n        dateData.value.forEach(item => {\n          sumArray[item.day - 1] = Number(item.total_price_sum);\n        });\n        console.log(sumArray);\n        chartData.value.datasets[0].data = sumArray;\n        console.log(chartData.value.datasets[0].data);\n      }).catch(error => {\n        console.error(error);\n      });\n    });\n    return {\n      chartData,\n      chartOptions,\n      today\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","api","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","name","components","setup","dateData","today","chartOptions","responsive","get","then","response","value","data","result","catch","error","console","maxDay","Math","max","map","item","day","sumArray","Array","from","length","forEach","Number","total_price_sum","log","chartData","datasets"],"sources":["/home/prism/Documents/flyticket/src/components/Admin/DashBoard.vue"],"sourcesContent":["<template>\n  <p>something</p>\n\n  <div class=\"container\">\n    <div class=\"total\">\n      <div>\n        <p>total of today</p>\n        <span> {{ today }}</span>\n      </div>\n      <div>\n        <p>total of this month</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"chart-container\">\n    <div class=\"chart\">\n      <Bar :options=\"chartOptions\" :data=\"chartData\" />\n    </div>\n  </div>\n  <button @click=\"nextDay()\">+</button>\n  <p>{{ data }}</p>\n</template>\n<script>\nimport { ref, onMounted } from \"vue\";\nimport api from \"../../api\";\n\nimport { Bar } from \"vue-chartjs\";\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from \"chart.js\";\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n);\n\nexport default {\n  name: \"DashBoard\",\n  components: { Bar },\n  setup() {\n    let dateData = ref([]);\n    let today = ref(\"\");\n    \n    let chartOptions = {\n      responsive: true,\n    };\n    onMounted(() => {\n      api\n        .get(\"/statistic/today\")\n        .then((response) => {\n          today.value = response.data.result;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      api\n        .get(\"/statistic/total\")\n        .then((response) => {\n          dateData.value = response.data;\n          const maxDay = Math.max(...dateData.value.map((item) => item.day));\n          const sumArray = Array.from({ length: maxDay }, () => 0);\n          dateData.value.forEach((item) => {\n            sumArray[item.day - 1] = Number(item.total_price_sum);\n          });\n          console.log(sumArray);\n          chartData.value.datasets[0].data = sumArray;\n          console.log(chartData.value.datasets[0].data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    return { chartData, chartOptions, today };\n  },\n};\n</script>\n<style scoped>\n.container {\n  display: flex;\n}\n.chart {\n  width: 100%;\n  height: 40rem;\n}\n.chart-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n.total {\n  display: flex;\n  flex-direction: row;\n  gap: 1rem;\n  width: 100%;\n  height: 15rem;\n  padding-left: 2rem;\n}\n.total div {\n  width: 15rem;\n  height: 15rem;\n  background-color: rgb(86, 193, 255);\n  border-radius: 2rem;\n  box-shadow: 5px 10px;\n}\n</style>\n"],"mappings":"AAuBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,GAAE,MAAO,WAAW;AAE3B,SAASC,GAAE,QAAS,aAAa;AACjC,SACEC,KAAI,IAAKC,OAAO,EAChBC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WAAW,QACN,UAAU;AACjBN,OAAO,CAACO,QAAQ,CACdN,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WAAU,CACX;AAED,eAAe;EACbE,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IAAEX;EAAI,CAAC;EACnBY,KAAKA,CAAA,EAAG;IACN,IAAIC,QAAO,GAAIhB,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIiB,KAAI,GAAIjB,GAAG,CAAC,EAAE,CAAC;IAEnB,IAAIkB,YAAW,GAAI;MACjBC,UAAU,EAAE;IACd,CAAC;IACDlB,SAAS,CAAC,MAAM;MACdC,GAAE,CACCkB,GAAG,CAAC,kBAAkB,EACtBC,IAAI,CAAEC,QAAQ,IAAK;QAClBL,KAAK,CAACM,KAAI,GAAID,QAAQ,CAACE,IAAI,CAACC,MAAM;MACpC,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;MACJzB,GAAE,CACCkB,GAAG,CAAC,kBAAkB,EACtBC,IAAI,CAAEC,QAAQ,IAAK;QAClBN,QAAQ,CAACO,KAAI,GAAID,QAAQ,CAACE,IAAI;QAC9B,MAAMK,MAAK,GAAIC,IAAI,CAACC,GAAG,CAAC,GAAGf,QAAQ,CAACO,KAAK,CAACS,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAC,CAAC;QAClE,MAAMC,QAAO,GAAIC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAET;QAAO,CAAC,EAAE,MAAM,CAAC,CAAC;QACxDb,QAAQ,CAACO,KAAK,CAACgB,OAAO,CAAEN,IAAI,IAAK;UAC/BE,QAAQ,CAACF,IAAI,CAACC,GAAE,GAAI,CAAC,IAAIM,MAAM,CAACP,IAAI,CAACQ,eAAe,CAAC;QACvD,CAAC,CAAC;QACFb,OAAO,CAACc,GAAG,CAACP,QAAQ,CAAC;QACrBQ,SAAS,CAACpB,KAAK,CAACqB,QAAQ,CAAC,CAAC,CAAC,CAACpB,IAAG,GAAIW,QAAQ;QAC3CP,OAAO,CAACc,GAAG,CAACC,SAAS,CAACpB,KAAK,CAACqB,QAAQ,CAAC,CAAC,CAAC,CAACpB,IAAI,CAAC;MAC/C,CAAC,EACAE,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO;MAAEgB,SAAS;MAAEzB,YAAY;MAAED;IAAM,CAAC;EAC3C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}