{"ast":null,"code":"import { onMounted, ref, computed } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport api from \"../api\";\nexport default {\n  setup() {\n    let route = useRoute();\n    let id = route.query.id;\n    let plane = ref();\n    let businessSeatOrder = ref(0);\n    let normalSeatOrder = ref(0);\n    let newbusinessSeatOrder = ref(0);\n    let newnormalSeatOrder = ref(0);\n    let totalPrice = ref(0);\n    let departureTime = ref();\n    let arrivalTime = ref();\n    let normalSeat = ref();\n    let businessSeat = ref();\n    let normalPrice = ref();\n    let businessPrice = ref();\n    let departureDate = ref();\n    let departureCity = ref();\n    let arrivalDate = ref();\n    let arrivalCity = ref();\n    onMounted(() => {\n      console.log(id);\n      api.get(\"/orderEdit/\" + id).then(response => {\n        console.log(response.data);\n        plane.value = response.data[0].planes;\n        businessSeatOrder.value = response.data[0].business_seat_order;\n        normalSeatOrder.value = response.data[0].normal_seat_order;\n        normalSeat.value = response.data[0].normal_seat;\n        businessSeat.value = response.data[0].business_seat;\n        departureTime.value = response.data[0].departure_time;\n        arrivalTime.value = response.data[0].arrival_time;\n        totalPrice.value = response.data[0].total_price;\n        departureDate.value = response.data[0].departure_date;\n        departureCity.value = response.data[0].departure_city_name;\n        arrivalDate.value = response.data[0].arrival_date;\n        arrivalCity.value = response.data[0].arrival_city_name;\n        normalPrice.value = response.data[0].normal_price;\n        bus;\n      }).catch(error => {\n        console.error(error);\n      });\n    });\n    conso;\n    let newTotalPrice = computed(() => {\n      let result = newnormalSeatOrder.value * normalPrice.value + newbusinessSeatOrder.value * businessPrice.value;\n      return isNaN(result) ? 0 : result;\n    });\n    function formatDate(date) {\n      let dateObj = new Date(date);\n      const year = dateObj.getFullYear();\n      const month = dateObj.getMonth() + 1;\n      const day = dateObj.getDate();\n      return `${day}-${month}-${year}`;\n    }\n    return {\n      formatDate,\n      plane,\n      businessSeatOrder,\n      normalSeatOrder,\n      newbusinessSeatOrder,\n      newnormalSeatOrder,\n      totalPrice,\n      newTotalPrice,\n      departureCity,\n      departureDate,\n      arrivalDate,\n      arrivalCity,\n      normalSeat,\n      businessSeat,\n      normalPrice,\n      businessPrice,\n      departureTime,\n      arrivalTime\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","computed","useRoute","api","setup","route","id","query","plane","businessSeatOrder","normalSeatOrder","newbusinessSeatOrder","newnormalSeatOrder","totalPrice","departureTime","arrivalTime","normalSeat","businessSeat","normalPrice","businessPrice","departureDate","departureCity","arrivalDate","arrivalCity","console","log","get","then","response","data","value","planes","business_seat_order","normal_seat_order","normal_seat","business_seat","departure_time","arrival_time","total_price","departure_date","departure_city_name","arrival_date","arrival_city_name","normal_price","bus","catch","error","conso","newTotalPrice","result","isNaN","formatDate","date","dateObj","Date","year","getFullYear","month","getMonth","day","getDate"],"sources":["/home/prism/Documents/flyticket/src/views/EditView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <p>{{ plane }}</p>\n    <p>{{ formatDate(departureDate) }}</p>\n    <p>{{ departureCity }}</p>\n    <p>{{ departureTime }}</p>\n    <p>{{ formatDate(arrivalDate) }}</p>\n    <p>{{ arrivalCity }}</p>\n    <p>{{ arrivalTime }}</p>\n    <div class=\"edit-container\">\n      <div class=\"oldOrder\">\n        <p>Normal Seat Ordered: {{ normalSeatOrder }}</p>\n        <p>Business Seat Ordered: {{ businessSeatOrder }}</p>\n        <div class=\"totalPrice\">Total Price: {{ totalPrice }}$</div>\n      </div>\n      <div class=\"newOrder\">\n        <form action=\"\" class=\"form-edit\">\n          <div>\n            <label for=\"normal\">Change Normal Seat Order</label>\n            <input\n              type=\"number\"\n              name=\"\"\n              id=\"normal\"\n              v-model=\"newnormalSeatOrder\"\n              min=\"0\"\n              :max=\"normalSeat\"\n            />\n          </div>\n          <div>\n            <label for=\"business\">Change Business Seat Order</label>\n            <input\n              type=\"number\"\n              name=\"\"\n              id=\"business\"\n              v-model=\"newbusinessSeatOrder\"\n              min=\"0\"\n              :max=\"businessSeat\"\n            />\n          </div>\n          <p>New Price:{{ newTotalPrice }}</p>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { onMounted, ref, computed } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nimport api from \"../api\";\nexport default {\n  setup() {\n    let route = useRoute();\n    let id = route.query.id;\n    let plane = ref();\n    let businessSeatOrder = ref(0);\n    let normalSeatOrder = ref(0);\n    let newbusinessSeatOrder = ref(0);\n    let newnormalSeatOrder = ref(0);\n    let totalPrice = ref(0);\n    let departureTime = ref();\n    let arrivalTime = ref();\n    let normalSeat = ref();\n    let businessSeat = ref();\n    let normalPrice = ref();\n    let businessPrice = ref();\n    let departureDate = ref();\n    let departureCity = ref();\n    let arrivalDate = ref();\n    let arrivalCity = ref();\n    onMounted(() => {\n      console.log(id);\n      api\n        .get(\"/orderEdit/\" + id)\n        .then((response) => {\n          console.log(response.data);\n          plane.value = response.data[0].planes;\n          businessSeatOrder.value = response.data[0].business_seat_order;\n          normalSeatOrder.value = response.data[0].normal_seat_order;\n          normalSeat.value = response.data[0].normal_seat;\n          businessSeat.value = response.data[0].business_seat;\n          departureTime.value = response.data[0].departure_time;\n          arrivalTime.value = response.data[0].arrival_time;\n          totalPrice.value = response.data[0].total_price;\n          departureDate.value = response.data[0].departure_date;\n          departureCity.value = response.data[0].departure_city_name;\n          arrivalDate.value = response.data[0].arrival_date;\n          arrivalCity.value = response.data[0].arrival_city_name;\n          normalPrice.value = response.data[0].normal_price;\n          bus\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n    conso\n    let newTotalPrice = computed(() => {\n      let result =\n        newnormalSeatOrder.value * normalPrice.value +\n        newbusinessSeatOrder.value * businessPrice.value;\n      return isNaN(result) ? 0 : result;\n    });\n    function formatDate(date) {\n      let dateObj = new Date(date);\n      const year = dateObj.getFullYear();\n      const month = dateObj.getMonth() + 1;\n      const day = dateObj.getDate();\n      return `${day}-${month}-${year}`;\n    }\n    return {\n      formatDate,\n      plane,\n      businessSeatOrder,\n      normalSeatOrder,\n      newbusinessSeatOrder,\n      newnormalSeatOrder,\n      totalPrice,\n      newTotalPrice,\n      departureCity,\n      departureDate,\n      arrivalDate,\n      arrivalCity,\n      normalSeat,\n      businessSeat,\n      normalPrice,\n      businessPrice,\n      departureTime,\n      arrivalTime,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  width: 100%;\n  background-color: red;\n}\n.edit-container {\n  display: flex;\n  flex-direction: row;\n  margin: auto;\n  padding: auto;\n  justify-content: center;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}